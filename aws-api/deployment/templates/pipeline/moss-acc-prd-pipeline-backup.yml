AWSTemplateFormatVersion: 2010-09-09

Description: >
  Creates the deployment pipeline

Parameters:

  NamePrefix:
    Type: String
    Default: Aws
    Description: Prefix added to the name of resources created in this stack. It correspond to the service tag

  EnableDeploymentToDev:
    Description: Enables the deployment of the app stack to the development account. When disabled it removes the existing stack
    Type: String
    AllowedValues: [true, false]
    Default: true

  EnableDeploymentToAcc:
    Description: Enables the deployment of the app stack to the acceptance account. When disabled it removes the existing stack
    Type: String
    AllowedValues: [true, false]
    Default: false

  EnableDeploymentToPrd:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    Description: Enables the deployment of the app stack to the production account. When disabled it removes the existing stack

  DevelopmentAccount:
    Type: String
    Default: "551493771163"
    Description: The id of the development account

  AcceptanceAccount:
    Type: String
    Default: "489962969526"
    Description: The id of the acceptance account
  ProductionAccount:
    Type: String
    Default: "278720074780"
    Description: The id of the production account
  BudgetUnitCode:
    Type: String
    Default: madrid-Aws
    Description: The value for the budget-unit-code tag
  BusinessImpactLevel:
    Type: String
    Default: "2"
    AllowedValues:
      - "1"
      - "2"
      - "3"
      - "4"
    Description: The value for the business-impact-level tag
  BusinessOwner:
    Type: String
    Default: benoit.aperce@wipo.int
    Description: The value for the business-owner tag
  BusinessUnitName:
    Type: String
    Default: madrid
    Description: The value for the business-unit-name tag
  DataClassification:
    Type: String
    Default: confidential
    AllowedValues:
      - public
      - for_official_use_only
      - confidential
      - highly_confidential
    Description: The value for the data-classification tag
  TechnicalOwner:
    Type: String
    Default: don.onwunumah@wipo.int
    Description: The value for the technical-owner tag
  DRRegion:
    Type: String
    Default: eu-west-3
    Description: The disaster recovery region
  CicdRole:
    Type: String
    Default: cicd-emadrid
    Description: Role to assume to push the artifacts
  CicdAccount:
    Type: String
    Default: "173148697964"
    Description: The id of the cicd account
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]

Conditions:
  EnableDeploymentToDev: !Equals [!Ref EnableDeploymentToDev, true]
  EnableDeploymentToAcc: !Equals [!Ref EnableDeploymentToAcc, true]
  EnableDeploymentToPrd: !Equals [!Ref EnableDeploymentToPrd, true]
  IsCicdAccount: !Equals [!Ref AWS::AccountId, "173148697964"]

Resources:
  ApprovalSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: pipeline-approval-topic
      DisplayName: Pipeline Approval Notifications

  ApprovalSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCodePipelineToPublish
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sns:Publish
            Resource: !Ref ApprovalSNSTopic
      Topics:
        - !Ref ApprovalSNSTopic

  KMSKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: Used by Assumed Roles in dev/acc/prd accounts to Encrypt/Decrypt artifacts
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id:
          Ref: AWS::StackName
        Statement:
          - Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: "*"
          - Sid: Allow use of the key to other accounts
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
                - !Sub arn:aws:iam::${CicdAccount}:root
                - !Sub arn:aws:iam::${CicdAccount}:role/${CicdRole}
                - !GetAtt BuildRole.Arn
                - !GetAtt PipelineRole.Arn
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
          - Sid: AdminPermissions
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${DevelopmentAccount}:root
                - !Sub arn:aws:iam::${AcceptanceAccount}:root
                - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
                - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
                - !Sub arn:aws:iam::${ProductionAccount}:root
                - !Sub arn:aws:iam::${CicdAccount}:role/${CicdRole}
                - !Sub arn:aws:iam::${AWS::AccountId}:root
                - !GetAtt BuildRole.Arn
                - !GetAtt PipelineRole.Arn
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws

  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${NamePrefix}-crossaccount-cmk
      TargetKeyId: !Ref KMSKey

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      BucketName: !Sub ${NamePrefix}-artifacts-${AWS::Region}-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Sub arn:aws:kms:eu-central-1:${AWS::AccountId}:alias/${NamePrefix}-crossaccount-cmk
            BucketKeyEnabled: true
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      VersioningConfiguration:
        Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      LifecycleConfiguration:
        Rules:
          - Id: NonCurrentAndIncompleteVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 90
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 3
          - Id: ExpireDevBuilds
            Status: Enabled
            Prefix: /
            ExpirationInDays: 90

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Id: !Sub ${NamePrefix}-artifacts-bucket-policy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${DevelopmentAccount}:root
                - !Sub arn:aws:iam::${AcceptanceAccount}:root
                #                - !Sub arn:aws:iam::${ProductionAccount}:root
                - !Sub arn:aws:iam::${CicdAccount}:root
                - !Sub arn:aws:iam::${CicdAccount}:role/${CicdRole}
                - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
                #                - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
                #                - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
                - !GetAtt BuildRole.Arn
                - !GetAtt PipelineRole.Arn
            Action:
              - s3:List*
              - s3:GetObject
              - s3:PutObject*
              - s3:*
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*

  ArtifactsBucketPutPackageAndReadOnlyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-artifacts-bucket-readwrite-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject*
              - s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}/*
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}/package.zip
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}/package.zip
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*package.zip
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}/*package.zip
      Roles:
        - !Ref PipelineRole
        - !If
          - IsCicdAccount
          - !Ref CicdRole
          - !Ref AWS::NoValue

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${NamePrefix}-build-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Ref CrossAccountAssumePolicy
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess

  CrossAccountAssumePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role

  ReleaseLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${NamePrefix}-release-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CmkPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-cmk-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey
              - kms:DescribeKey
            Resource: !Sub arn:aws:kms:eu-central-1:${AWS::AccountId}:alias/${NamePrefix}-crossaccount-cmk
          - !If
            - IsCicdAccount
            - Effect: Allow
              Action:
                - kms:Encrypt
                - kms:Decrypt
                - kms:ReEncrypt*
                - kms:GenerateDataKey
                - kms:DescribeKey
              Resource: !Sub arn:aws:kms:eu-central-1:${DevelopmentAccount}:alias/${NamePrefix}-crossaccount-cmk
            - !Ref AWS::NoValue
          - !If
            - IsCicdAccount
            - Effect: Allow
              Action:
                - kms:Encrypt
                - kms:Decrypt
                - kms:ReEncrypt*
                - kms:GenerateDataKey
                - kms:DescribeKey
              Resource: !Sub arn:aws:kms:eu-central-1:191762909124:key/227c2d88-f17a-48b0-a616-c38cfdf319d3
            - !Ref AWS::NoValue
      Roles:
        - !Ref BuildRole
        - !Ref ReleaseLambdaRole
        - !If
          - IsCicdAccount
          - !Ref CicdRole
          - !Ref AWS::NoValue

  ArtifactsBucketReadWritePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-artifacts-bucket-readwrite-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject*
              - s3:GetObject*
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:AbortMultipartUpload
              - s3:PutObjectVersionAcl
              - s3:DeleteObject
              - s3:PutObjectAcl
              - s3:ListMultipartUploadPart
              - s3:CreateMultipartUpload
              - s3:*
              - ec2:*
              - route53:*
              - secretsmanager:*
              - lambda:*
              - apigateway:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}/*
      Roles:
        - !Ref BuildRole
        - !Ref ReleaseLambdaRole
        - !Ref PipelineRole
        - !If
          - IsCicdAccount
          - !Ref CicdRole
          - !Ref AWS::NoValue

  BuildRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudformation:*
              - events:*
              - iam:PassRole
              - kms:*
              - lambda:*
              - s3:*
              - ssm:*
              - sts:AssumeRole
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - arn:aws:s3:::Aws-artifacts-eu-central-1-${AWS::AccountId}
              - arn:aws:s3:::Aws-artifacts-eu-central-1-${AWS::AccountId}/*
          - Effect: Allow
            Action:
              - route53:ListHostedZonesByName
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BuildRolePolicy
      Roles:
        - !Ref BuildRole

  BuildProjectLogsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-build-logs-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*

      Roles:
        - !Ref BuildRole

  BuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project
      Description: Aws-build-project
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2
            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
            build:
              commands:
                - echo Building the parameters file...
                - touch templates/iac/master-parameters.json
                - ARTIFACTS_BUCKET=${PREFIX}-artifacts-${AWS_REGION}-${ARTIFACTS_ACCOUNT}
                - printf '{"Parameters":{' > templates/iac/master-parameters.json
                - printf '"BuildId":"%s",' $BUILD_ID >> templates/iac/master-parameters.json
                - printf '"BusinessUnitCodeName":"%s",' "${BUDGET_UNIT_CODE}" >> templates/iac/master-parameters.json
                - printf '"AppId":"%s",' "${APP_ID}" >> templates/iac/master-parameters.json
                - printf '"BusinessImpactLevelName":"%s",' "${BUSINESS_IMPACT_LEVEL}" >> templates/iac/master-parameters.json
                - printf '"BusinessOwnerName":"%s",' "${BUSINESS_OWNER}" >> templates/iac/master-parameters.json
                - printf '"BusinessUnitNameName":"%s",' "${BUSINESS_UNIT_NAME}" >> templates/iac/master-parameters.json
                - printf '"DataClassificationName":"%s",' "${DATA_CLASSIFICATION}" >> templates/iac/master-parameters.json
                - printf '"TechnicalOwnerName":"%s"' "${TECHNICAL_OWNER}" >> templates/iac/master-parameters.json
                - printf '},' >> templates/iac/master-parameters.json
                - printf '"Tags":{' >> templates/iac/master-parameters.json
                - printf '"budget-unit-code":"%s",' "${BUDGET_UNIT_CODE}" >> templates/iac/master-parameters.json
                - printf '"business-impact-level":"%s",' "${BUSINESS_IMPACT_LEVEL}" >> templates/iac/master-parameters.json
                - printf '"business-owner":"%s",' "${BUSINESS_OWNER}" >> templates/iac/master-parameters.json
                - printf '"business-unit-name":"%s",' "${BUSINESS_UNIT_NAME}" >> templates/iac/master-parameters.json
                - printf '"data-classification":"%s",' "${DATA_CLASSIFICATION}" >> templates/iac/master-parameters.json
                - printf '"service":"%s",' "${PREFIX}" >> templates/iac/master-parameters.json
                - printf '"technical-owner":"%s"}}' "${TECHNICAL_OWNER}" >> templates/iac/master-parameters.json
            post_build:
              commands:
                - echo Copying application, database and cloudFormation templates to S3
                - aws s3 cp --recursive artifacts s3://$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/
                - aws s3 cp --recursive templates s3://$ARTIFACTS_BUCKET/builds/$BUILD_ID/templates/
          artifacts:
            files:
              - '**/*'
            secondary-artifacts:
              BuildArtifact:
                files:
                  - templates/iac/template/master.yml
                  - templates/iac/master-parameters.json
        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  # DEV CodeBuilds
  BuildProjectVPCDev:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-dev-vpc
      Description: Aws-build-project-dev-vpc
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - cd templates/iac/Aws-api-prod-ts
                - npm install
                - cd -

            build:
              commands:
                - echo Building the cdk assets files... 1
                - cd templates/iac/Aws-api-prod-ts
                - echo Building the cdk assets files... 2
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk synth Aws-AwsCfnInfraVpcStack --require-approval never  --region eu-central-1 -o dev-out  > Aws-AwsCfnInfraVpcStack.yml
                - cd -

          artifacts:
            files:
              - '**/*'
            base-directory: 'templates/iac/Aws-api-prod-ts'
            exclude-paths: '**/node_modules/**/*'
            secondary-artifacts:
              VPCDevArtifact:
                base-directory: 'templates/iac/Aws-api-prod-ts'
                files:
                  - 'Aws-AwsCfnInfraVpcStack.yml'
                exclude-paths: '**/node_modules/**/*'
              CDKOutArtifact:
                base-directory: 'templates/iac/Aws-api-prod-ts/dev-out'
                files:
                  - '**/*'
        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCodeDev:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-dev-code
      Description: Aws-build-project-dev-code
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - cd templates/iac/Aws-api-prod-ts
                - npm install
                - cd -

            build:
              commands:
                - echo Building the cdk assets files... 1
                - cd templates/iac/Aws-api-prod-ts
                - echo Building the cdk assets files... 2
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk synth --require-approval never --region eu-central-1 -o dev-out
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsCfnInfraVpcStack.template.json --output-template dev-out/Aws-AwsCfnInfraVpcStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsInfraCfnBucketsECRStack.template.json --output-template dev-out/Aws-AwsInfraCfnBucketsECRStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsInfraRdsStack.template.json --output-template dev-out/Aws-AwsInfraRdsStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsCoreAlbServiceStack.template.json --output-template dev-out/Aws-AwsCoreAlbServiceStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsInfraECSClusterStack.template.json --output-template dev-out/Aws-AwsInfraECSClusterStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsInfraRegistryStack.template.json --output-template dev-out/Aws-AwsInfraRegistryStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsWafCloudFrontStack.template.json --output-template dev-out/Aws-AwsWafCloudFrontStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsCfnWafCdnStack.template.json --output-template dev-out/Aws-AwsCfnWafCdnStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsUsEastCertificateStack.template.json --output-template dev-out/Aws-AwsUsEastCertificateStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsCoreDBAccessStack.template.json --output-template dev-out/Aws-AwsCoreDBAccessStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsCoreMediaProcessStack.template.json --output-template dev-out/Aws-AwsCoreMediaProcessStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsCoreEmailSvctack.template.json --output-template dev-out/Aws-AwsCoreEmailSvctack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsCoreMirisProxyStack.template.json --output-template dev-out/Aws-AwsCoreMirisProxyStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsAuthStack.template.json --output-template dev-out/Aws-AwsAuthStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsApiV1Stack.template.json --output-template dev-out/Aws-AwsApiV1Stack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsApiV2Stack.template.json --output-template dev-out/Aws-AwsApiV2Stack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsEventsStack.template.json --output-template dev-out/Aws-AwsEventsStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsFrontEndStack.template.json --output-template dev-out/Aws-AwsFrontEndStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir dev-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template dev-out/Aws-AwsApiDocsStack.template.json --output-template dev-out/Aws-AwsApiDocsStack.yml
                - cd -
            post_build:
              commands:
                - echo Copying application, database and cloudFormation templates to S3

          artifacts:
            files:
              - '**/*'
            base-directory: 'templates/iac/Aws-api-prod-ts/dev-out'
            secondary-artifacts:
              DevArtifact:
                discard-paths: yes
                files:
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsCfnInfraVpcStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsInfraCfnBucketsECRStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsInfraRdsStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsInfraECSClusterStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsInfraRegistryStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsWafCloudFrontStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsCoreAlbServiceStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsCfnWafCdnStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsCoreMirisProxyStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsUsEastCertificateStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsCoreDBAccessStack.yml
                  - templates/iac/Aws-api-prod-ts/dev-out/Aws-AwsCoreMediaProcessStack.yml
              CDKDevArtifact:
                base-directory: 'templates/iac/Aws-api-prod-ts'
                files:
                  - '**/*'
                exclude-paths: '**/node_modules/**/*'

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCDKDeployRegistry:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-dev-deploy-reg
      Description: Aws-build-project-dev-deploy-reg
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - npm install

            build:
              commands:
                - echo Building the cdk assets files... 1
                - ls -al
                - npx aws-cdk deploy --app dev-out Aws-AwsInfraRegistryStack --require-approval=never --verbose

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCDKDeployCerts:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-dev-deploy-cert
      Description: Aws-build-project-dev-deploy-cert
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - npm install

            build:
              commands:
                - echo Building the cdk assets files... 1
                - ls -al
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk deploy --app dev-out Aws-AwsUsEastCertificateStack --require-approval=never --verbose

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCDKDeployFunctions:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-dev-deploy-func
      Description: Aws-build-project-dev-deploy-func
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - npm install

            build:
              commands:
                - echo Building the cdk assets files... 1
                - ls -al
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk deploy --app dev-out Aws-AwsAuthStack --require-approval=never --verbose
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk deploy --app dev-out Aws-AwsApiV1Stack --require-approval=never --verbose
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk deploy --app dev-out Aws-AwsApiV2Stack --require-approval=never --verbose
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk deploy --app dev-out Aws-AwsEventsStack --require-approval=never --verbose
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk deploy --app dev-out Aws-AwsEventsStack --require-approval=never --verbose

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCDKDeployFrontEnd:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-dev-deploy-fe
      Description: Aws-build-project-dev-deploy-fe
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - npm install

            build:
              commands:
                - echo Building the cdk assets files... 1
                - ls -al
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk deploy --app dev-out Aws-AwsFrontEndStack --require-approval=never --verbose
                - export APP_CONFIG=config/app-config-infra-pipeline-dev.json; npx aws-cdk deploy --app dev-out Aws-AwsApiDocsStack --require-approval=never --verbose

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  # ACC CodeBuilds
  BuildProjectVPCAcc:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-acc-vpc
      Description: Aws-build-project-acc-vpc
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - cd templates/iac/Aws-api-prod-ts
                - npm install
                - cd -

            build:
              commands:
                - echo Building the cdk assets files... 1
                - cd templates/iac/Aws-api-prod-ts
                - echo Building the cdk assets files... 2
                - export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk synth Aws-AwsCfnInfraVpcStack --require-approval never  --region eu-central-1 -o acc-out  > Aws-AwsCfnInfraVpcStack.yml
                - cd -

          artifacts:
            files:
              - '**/*'
            base-directory: 'templates/iac/Aws-api-prod-ts'
            exclude-paths: '**/node_modules/**/*'
            secondary-artifacts:
              VPCAccArtifact:
                base-directory: 'templates/iac/Aws-api-prod-ts'
                files:
                  - 'Aws-AwsCfnInfraVpcStack.yml'
                exclude-paths: '**/node_modules/**/*'
              CDKOutArtifact:
                base-directory: 'templates/iac/Aws-api-prod-ts/acc-out'
                files:
                  - '**/*'
        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCodeAcc:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-acc-code
      Description: Aws-build-project-acc-code
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - cd templates/iac/Aws-api-prod-ts
                - npm install
                - cd -

            build:
              commands:
                - echo Building the cdk assets files... 1
                - cd templates/iac/Aws-api-prod-ts
                - echo Building the cdk assets files... 2
                - export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk synth --require-approval never  --region eu-central-1 -o acc-out -vv
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsCfnInfraVpcStack.template.json --output-template acc-out/Aws-AwsCfnInfraVpcStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsInfraCfnBucketsECRStack.template.json --output-template acc-out/Aws-AwsInfraCfnBucketsECRStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsInfraRdsStack.template.json --output-template acc-out/Aws-AwsInfraRdsStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsCoreAlbServiceStack.template.json --output-template acc-out/Aws-AwsCoreAlbServiceStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsInfraECSClusterStack.template.json --output-template acc-out/Aws-AwsInfraECSClusterStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsInfraRegistryStack.template.json --output-template acc-out/Aws-AwsInfraRegistryStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsWafCloudFrontStack.template.json --output-template acc-out/Aws-AwsWafCloudFrontStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsCfnWafCdnStack.template.json --output-template acc-out/Aws-AwsCfnWafCdnStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsUsEastCertificateStack.template.json --output-template acc-out/Aws-AwsUsEastCertificateStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsCoreDBAccessStack.template.json --output-template acc-out/Aws-AwsCoreDBAccessStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsCoreMediaProcessStack.template.json --output-template acc-out/Aws-AwsCoreMediaProcessStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsCoreEmailSvctack.template.json --output-template acc-out/Aws-AwsCoreEmailSvctack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsCoreMirisProxyStack.template.json --output-template acc-out/Aws-AwsCoreMirisProxyStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsAuthStack.template.json --output-template acc-out/Aws-AwsAuthStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsApiV1Stack.template.json --output-template acc-out/Aws-AwsApiV1Stack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsApiV2Stack.template.json --output-template acc-out/Aws-AwsApiV2Stack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsEventsStack.template.json --output-template acc-out/Aws-AwsEventsStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsFrontEndStack.template.json --output-template acc-out/Aws-AwsFrontEndStack.yml
                - script/assets_package/upload_and_package_assets.sh --cdk-out-dir acc-out --s3-bucket "$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/" --synthesized-template acc-out/Aws-AwsApiDocsStack.template.json --output-template acc-out/Aws-AwsApiDocsStack.yml
                - cd -
            post_build:
              commands:
                - echo Copying application, database and cloudFormation templates to S3

          artifacts:
            files:
              - '**/*'
            base-directory: 'templates/iac/Aws-api-prod-ts/acc-out'
            secondary-artifacts:
              AccArtifact:
                discard-paths: yes
                files:
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsCfnInfraVpcStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsInfraCfnBucketsECRStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsInfraRdsStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsInfraECSClusterStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsInfraRegistryStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsWafCloudFrontStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsCoreAlbServiceStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsCfnWafCdnStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsCoreMirisProxyStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsUsEastCertificateStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsCoreDBAccessStack.yml
                  - templates/iac/Aws-api-prod-ts/acc-out/Aws-AwsCoreMediaProcessStack.yml
              CDKAccArtifact:
                base-directory: 'templates/iac/Aws-api-prod-ts'
                files:
                  - '**/*'
                exclude-paths: '**/node_modules/**/*'

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCDKDeployRegistryAcc:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-acc-deploy-reg
      Description: Aws-build-project-acc-deploy-reg
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - npm install

            build:
              commands:
                - echo Building the cdk assets files... with deploy
                - ls -al
                - echo Checking for acc-out
                - ls -al acc-out
                - npx aws-cdk deploy --app acc-out Aws-AwsInfraRegistryStack --require-approval=never --verbose

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCDKDeployCertsAcc:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-acc-deploy-cert
      Description: Aws-build-project-acc-deploy-cert
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - npm install

            build:
              commands:
                - echo Building the cdk assets files... 1
                - ls -al
                - export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk deploy --app acc-out Aws-AwsUsEastCertificateStack --require-approval=never --verbose

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCDKDeployFunctionsAcc:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-acc-deploy-func
      Description: Aws-build-project-acc-deploy-func
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - npm install

            build:
              commands:
                - echo Building the cdk assets files... 1
                - ls -al
                - export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk deploy --app acc-out Aws-AwsAuthStack --require-approval=never --verbose
                - export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk deploy --app acc-out Aws-AwsApiV1Stack --require-approval=never --verbose
                - export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk deploy --app acc-out Aws-AwsApiV2Stack --require-approval=never --verbose
                - export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk deploy --app acc-out Aws-AwsEventsStack --require-approval=never --verbose
                #- export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk deploy --app acc-out Aws-AwsEventsStack --require-approval=never --verbose

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectCDKDeployFrontEndAcc:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-acc-deploy-fe
      Description: Aws-build-project-acc-deploy-fe
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
          version: 0.2

          phases:
            install:
              runtime-versions:
                nodejs: 14
              commands:
                - npm install -g aws-cdk@2

            pre_build:
              commands:
                - ls -al
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT="0"
                - PREFIX=$PROJECT_PREFIX
                - if [ -f "cicd-package.json" ]; then COMMIT=$(jq -r '.build.number' cicd-package.json | sed 's/null/0/g' | sed 's/BUILD_NUMBER/0/g'); fi
                - echo commit $COMMIT
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - echo $SHORT_SOURCE_VERSION
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
                - aws sts get-caller-identity
                - npm install

            build:
              commands:
                - echo Building the cdk assets files... 1
                - ls -al
                - export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk deploy --app acc-out Aws-AwsFrontEndStack --require-approval=never --verbose
                - export APP_CONFIG=config/app-config-infra-pipeline-acc.json; npx aws-cdk deploy --app acc-out Aws-AwsApiDocsStack --require-approval=never --verbose

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildProjectSelfMutateAcc:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: Aws-build-project-acc-selfmutate
      Description: Aws-build-project-acc-selfmutate
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Image: aws/codebuild/standard:5.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
          - Name: REGION
            Type: PLAINTEXT
            Value: eu-central-1
          - Name: PROJECT_NAME
            Type: PLAINTEXT
            Value: Aws
          - Name: PROJECT_STAGE
            Type: PLAINTEXT
            Value: dev
          - Name: PROJECT_PREFIX
            Type: PLAINTEXT
            Value: Aws
          - Name: ASSUME_ROLE_ARN
            Type: PLAINTEXT
            Value: ""
          - Name: ON_PIPELINE
            Type: PLAINTEXT
            Value: "YES"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        BuildSpec: |-
            version: 0.2
            phases:
              install:
                commands:
                  - npm install -g aws-cdk@2
              build:
                commands:
                  - cdk --app . deploy Aws-AwsInfrastructrePipelineStack --require-approval=never --verbose

        Type: CODEPIPELINE
      Tags:
        - Key: budget-unit-code
          Value: madrid-Aws
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED


  BuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${NamePrefix}/build
      RetentionInDays: 7

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${NamePrefix}-pipeline-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  PipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-codepipeline-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: iam:PassRole
            Resource: "*"
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
          - Effect: Allow
            Action:
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              - lambda:*
            Resource: "*"
          - Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
            Resource: "*"
          - Effect: Allow
            Action:
              - ecr:DescribeImages
            Resource: "*"
      Roles:
        - !Ref PipelineRole
        - !Ref BuildRole

  PipeLineAssumeRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-assume-role-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role

      Roles:
        - !Ref PipelineRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: PipeLineAssumeRolePolicy
    Properties:
      Name: Aws-infrastructure-pipeline
      PipelineType: V2
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
        EncryptionKey:
          Id: !GetAtt KMSKey.Arn
          Type: KMS
      Stages:
        - Name: Source
          Actions:
            - Name: S3Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: S3
              Configuration:
                S3Bucket: !Ref ArtifactsBucket
                S3ObjectKey: package.zip
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

        # Dev - VPC Code Build
        - !If
          - EnableDeploymentToDev
          - Name: Build
            Actions:
              - Name: Build
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProject
                  PrimarySource: SourceArtifact
                RunOrder: 1
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: BuildArtifact
              - Name: BuildVPC
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectVPCDev
                  PrimarySource: SourceArtifact
                RunOrder: 1
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: VPCDevArtifact
                  - Name: CDKOutArtifact
          - !Ref AWS::NoValue

#        - !If
#          - EnableDeploymentToAcc
#          - Name: DeployVPCToAcc
#            Actions:
#              - Name: DeployVPCInfraStacks
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsCfnInfraVpcStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: VPCAccArtifact::Aws-AwsCfnInfraVpcStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: VPCAccArtifact
#                RunOrder: 1
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
#
#          - !Ref AWS::NoValue

        # ACC - VPC Code build
        - !If
          - EnableDeploymentToAcc
          - Name: Build
            Actions:
              - Name: Build
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProject
                  PrimarySource: SourceArtifact
                RunOrder: 1
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: BuildArtifact
              - Name: BuildDeployAcc
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectVPCAcc
                  PrimarySource: SourceArtifact
                RunOrder: 1
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: VPCAccArtifact
                  - Name: CDKOutArtifact
          - !Ref AWS::NoValue

        # Dev - Deploy VPC
        - !If
          - EnableDeploymentToDev
          - Name: DeployVPCToDevelopment
            Actions:
              - Name: DeployVPCInfraStacks
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode:
                    !If [ EnableDeploymentToDev, REPLACE_ON_FAILURE, DELETE_ONLY ]
                  StackName: !Sub ${NamePrefix}-AwsCfnInfraVpcStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: VPCDevArtifact::Aws-AwsCfnInfraVpcStack.yml
                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: VPCDevArtifact
                RunOrder: 1
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
          - !Ref AWS::NoValue

        # Dev - Build-Code
        - !If
          - EnableDeploymentToDev
          - Name: BuildToDevelopment
            Actions:
              - Name: BuildCodeDev
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCodeDev
                  PrimarySource: SourceArtifact
                RunOrder: 2
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: DevArtifact
                  - Name: CDKDevArtifact
          - !Ref AWS::NoValue

        # Dev - Deploy-Build-Code
#        - !If
#          - EnableDeploymentToDev
#          - Name: CDKDeployToDevelopment
#            Actions:
#              - Name: BuildCodeCDKDeploy
#                ActionTypeId:
#                  Category: Build
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CodeBuild
#                Configuration:
#                  ProjectName: !Ref BuildProjectCDKDeploy
#                  PrimarySource: CDKDevArtifact
#                RunOrder: 3
#                InputArtifacts:
#                  - Name: CDKDevArtifact
#          - !Ref AWS::NoValue

        # Dev - Deploy Codes
        - !If
          - EnableDeploymentToDev
          - Name: DeployCodesToDevelopment
            Actions:
              - Name: DeployVPCInfraStacks
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode:
                    !If [EnableDeploymentToDev, REPLACE_ON_FAILURE, DELETE_ONLY]
                  StackName: !Sub ${NamePrefix}-AwsCfnInfraVpcStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: VPCDevArtifact::Aws-AwsCfnInfraVpcStack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: VPCDevArtifact
                RunOrder: 1
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsInfraCfnBucketsECRStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode:
                    !If [EnableDeploymentToDev, REPLACE_ON_FAILURE, DELETE_ONLY]
                  StackName: !Sub ${NamePrefix}-AwsInfraCfnBucketsECRStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: DevArtifact::Aws-AwsInfraCfnBucketsECRStack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: DevArtifact
                RunOrder: 2
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsInfraRdsStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsInfraRdsStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: DevArtifact::Aws-AwsInfraRdsStack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: DevArtifact
                RunOrder: 3
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsInfraECSClusterStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsInfraECSClusterStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: DevArtifact::Aws-AwsInfraECSClusterStack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: DevArtifact
                RunOrder: 4
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsInfraRegistryStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsInfraRegistryStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: DevArtifact::Aws-AwsInfraRegistryStack.yml
#                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: DevArtifact
#                RunOrder: 5
#                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsInfraRegistryStackDeploy
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCDKDeployRegistry
                  PrimarySource: CDKDevArtifact
                RunOrder: 5
                InputArtifacts:
                  - Name: CDKDevArtifact
              - Name: AwsCfnWafCdnStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsCfnWafCdnStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: DevArtifact::Aws-AwsCfnWafCdnStack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: DevArtifact
                RunOrder: 6
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsCoreAlbServiceStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsCoreAlbServiceStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: DevArtifact::Aws-AwsCoreAlbServiceStack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: DevArtifact
                RunOrder: 7
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsUsEastCertificateStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsUsEastCertificateStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: DevArtifact::Aws-AwsUsEastCertificateStack.yml
#                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: DevArtifact
#                RunOrder: 7
#                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsUsEastCertificateStack
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCDKDeployCerts
                  PrimarySource: CDKDevArtifact
                RunOrder: 8
                InputArtifacts:
                  - Name: CDKDevArtifact
              - Name: AwsCoreMediaProcessStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsCoreMediaProcessStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: DevArtifact::Aws-AwsCoreMediaProcessStack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: DevArtifact
                RunOrder: 10
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsCoreDBAccessStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsCoreDBAccessStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: DevArtifact::Aws-AwsCoreDBAccessStack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: DevArtifact
                RunOrder: 9
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              #                - Name: AwsCoreMirisProxyStack
              #                  ActionTypeId:
              #                    Category: Deploy
              #                    Owner: AWS
              #                    Version: "1"
              #                    Provider: CloudFormation
              #                  Configuration:
              #                    ActionMode: REPLACE_ON_FAILURE
              #                    StackName: !Sub ${NamePrefix}-AwsCoreMirisProxyStack
              #                    Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              #                    TemplatePath: DevArtifact::Aws-AwsCoreMirisProxyStack.yml
              #                    ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
              #                    RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
              #                  InputArtifacts:
              #                    - Name: DevArtifact
              #                  RunOrder: 11
              #                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsCoreEmailSvctack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsCoreEmailSvctack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: DevArtifact::Aws-AwsCoreEmailSvctack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: DevArtifact
                RunOrder: 12
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsAuthStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsAuthStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: DevArtifact::Aws-AwsAuthStack.yml
#                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: DevArtifact
#                RunOrder: 13
#                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsApiV1Stack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsApiV1Stack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: DevArtifact::Aws-AwsApiV1Stack.yml
#                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: DevArtifact
#                RunOrder: 14
#                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsApiV2Stack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsApiV2Stack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: DevArtifact::Aws-AwsApiV2Stack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: DevArtifact
#                RunOrder: 15
#                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsEventsStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsEventsStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: DevArtifact::Aws-AwsEventsStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: DevArtifact
#                RunOrder: 16
#                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              # BuildProjectCDKDeployFunctions
              - Name: AwsAuthEventsV1V2Stack
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCDKDeployFunctions
                  PrimarySource: CDKDevArtifact
                RunOrder: 16
                InputArtifacts:
                  - Name: CDKDevArtifact
#              - Name: AwsFrontEndStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsFrontEndStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: DevArtifact::Aws-AwsFrontEndStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: DevArtifact
#                RunOrder: 17
#                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsApiDocsStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsApiDocsStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: DevArtifact::Aws-AwsApiDocsStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: DevArtifact
#                RunOrder: 18
#                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
                # BuildProjectCDKDeployFrontEnd
              - Name: AwsApiDocFrontEndStack
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCDKDeployFrontEnd
                  PrimarySource: CDKDevArtifact
                RunOrder: 18
                InputArtifacts:
                  - Name: CDKDevArtifact
          - !Ref AWS::NoValue

        # ACC Deploy VPC
        - !If
          - EnableDeploymentToAcc
          - Name: DeployVPCToAcc
            Actions:
              - Name: DeployVPCInfraStacks
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsCfnInfraVpcStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: VPCAccArtifact::Aws-AwsCfnInfraVpcStack.yml
                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: VPCAccArtifact
                RunOrder: 1
                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
          - !Ref AWS::NoValue

        # ACC Build-Code
        - !If
          - EnableDeploymentToAcc
          - Name: BuildToAcc
            Actions:
              - Name: BuildCodeAcc
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCodeAcc
                  PrimarySource: SourceArtifact
                RunOrder: 2
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: AccArtifact
                  - Name: CDKAccArtifact
          - !Ref AWS::NoValue

        # ACC Deploy-Code
        - !If
          - EnableDeploymentToAcc
          - Name: BuildDeployCodeToAcc
            Actions:
              - Name: AwsCfnInfraVpcStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsCfnInfraVpcStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: AccArtifact::Aws-AwsCfnInfraVpcStack.yml
                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: AccArtifact
                RunOrder: 1
                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsInfraCfnBucketsECRStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsInfraCfnBucketsECRStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: AccArtifact::Aws-AwsInfraCfnBucketsECRStack.yml
                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: AccArtifact
                RunOrder: 2
                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsInfraRdsStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsInfraRdsStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: AccArtifact::Aws-AwsInfraRdsStack.yml
                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: AccArtifact
                RunOrder: 3
                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsInfraECSClusterStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsInfraECSClusterStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: AccArtifact::Aws-AwsInfraECSClusterStack.yml
                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: AccArtifact
                RunOrder: 4
                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsInfraRegistryStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsInfraRegistryStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsInfraRegistryStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 5
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsInfraRegistryStackDeploy
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCDKDeployRegistryAcc
                  PrimarySource: CDKAccArtifact
                RunOrder: 5
                InputArtifacts:
                  - Name: CDKAccArtifact
#              - Name: AwsWafCloudFrontStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsWafCloudFrontStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsWafCloudFrontStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 6
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsCoreAlbServiceStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsCoreAlbServiceStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: AccArtifact::Aws-AwsCoreAlbServiceStack.yml
                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: AccArtifact
                RunOrder: 7
                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsUsEastCertificateStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsUsEastCertificateStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsUsEastCertificateStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 7
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsUsEastCertificateStack
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCDKDeployCertsAcc
                  PrimarySource: CDKAccArtifact
                RunOrder: 8
                InputArtifacts:
                  - Name: CDKAccArtifact
#              - Name: AwsCoreDBAccessStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsCoreDBAccessStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsCoreDBAccessStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 9
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsCoreMediaProcessStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  StackName: !Sub ${NamePrefix}-AwsCoreMediaProcessStack
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: AccArtifact::Aws-AwsCoreMediaProcessStack.yml
                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: AccArtifact
                RunOrder: 10
                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              #                - Name: AwsCoreDBAccessStack
              #                  ActionTypeId:
              #                    Category: Deploy
              #                    Owner: AWS
              #                    Version: "1"
              #                    Provider: CloudFormation
              #                  Configuration:
              #                    ActionMode: REPLACE_ON_FAILURE
              #                    StackName: !Sub ${NamePrefix}-AwsCoreDBAccessStack
              #                    Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              #                    TemplatePath: AccArtifact::Aws-AwsCoreDBAccessStack.yml
              #                    ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
              #                    RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
              #                  InputArtifacts:
              #                    - Name: AccArtifact
              #                  RunOrder: 9
              #                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              #                - Name: AwsCoreMirisProxyStack
              #                  ActionTypeId:
              #                    Category: Deploy
              #                    Owner: AWS
              #                    Version: "1"
              #                    Provider: CloudFormation
              #                  Configuration:
              #                    ActionMode: REPLACE_ON_FAILURE
              #                    StackName: !Sub ${NamePrefix}-AwsCoreMirisProxyStack
              #                    Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              #                    TemplatePath: AccArtifact::Aws-AwsCoreMirisProxyStack.yml
              #                    ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
              #                    RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
              #                  InputArtifacts:
              #                    - Name: AccArtifact
              #                  RunOrder: 11
              #                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              #                - Name: AwsCoreEmailSvctack
              #                  ActionTypeId:
              #                    Category: Deploy
              #                    Owner: AWS
              #                    Version: "1"
              #                    Provider: CloudFormation
              #                  Configuration:
              #                    ActionMode: REPLACE_ON_FAILURE
              #                    StackName: !Sub ${NamePrefix}-AwsCoreEmailSvctack
              #                    Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              #                    TemplatePath: AccArtifact::Aws-AwsCoreEmailSvctack.yml
              #                    ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
              #                    RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
              #                  InputArtifacts:
              #                    - Name: AccArtifact
              #                  RunOrder: 12
              #                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsCoreEmailSvctack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsCoreEmailSvctack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsCoreEmailSvctack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 12
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsAuthStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsAuthStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsAuthStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 13
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsApiV1Stack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsApiV1Stack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsApiV1Stack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 14
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsApiV2Stack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsApiV2Stack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsApiV2Stack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 15
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsEventsStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsEventsStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsEventsStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 16
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsAuthEventsV1V2Stack
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCDKDeployFunctionsAcc
                  PrimarySource: CDKAccArtifact
                RunOrder: 16
                InputArtifacts:
                  - Name: CDKAccArtifact
#              - Name: AwsFrontEndStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsFrontEndStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsFrontEndStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 17
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsApiDocsStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsApiDocsStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: AccArtifact::Aws-AwsApiDocsStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: AccArtifact
#                RunOrder: 18
#                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: AwsApiDocFrontEndStack
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Ref BuildProjectCDKDeployFrontEndAcc
                  PrimarySource: CDKAccArtifact
                RunOrder: 18
                InputArtifacts:
                  - Name: CDKAccArtifact
          - !Ref AWS::NoValue

#        - !If
#          - EnableDeploymentToPrd
#          - Name: DeployToProduction
#            Actions:
#              - Name: DeployVPCInfraStacks
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode:
#                    !If [EnableDeploymentToDev, REPLACE_ON_FAILURE, DELETE_ONLY]
#                  StackName: !Sub ${NamePrefix}-AwsCfnInfraVpcStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsCfnInfraVpcStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 1
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsInfraCfnBucketsECRStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode:
#                    !If [EnableDeploymentToDev, REPLACE_ON_FAILURE, DELETE_ONLY]
#                  StackName: !Sub ${NamePrefix}-AwsInfraCfnBucketsECRStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsInfraCfnBucketsECRStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 2
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsInfraRdsStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsInfraRdsStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsInfraRdsStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 3
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsInfraECSClusterStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsInfraECSClusterStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsInfraECSClusterStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 4
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsInfraRegistryStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsInfraRegistryStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsInfraRegistryStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 5
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsWafCloudFrontStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsWafCloudFrontStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsWafCloudFrontStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 6
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsUsEastCertificateStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsUsEastCertificateStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsUsEastCertificateStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 7
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsCoreDBAccessStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsCoreDBAccessStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsCoreDBAccessStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 8
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsCoreMediaProcessStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsCoreMediaProcessStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsCoreMediaProcessStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 9
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-
#              #                - Name: AwsCoreDBAccessStack
#              #                  ActionTypeId:
#              #                    Category: Deploy
#              #                    Owner: AWS
#              #                    Version: "1"
#              #                    Provider: CloudFormation
#              #                  Configuration:
#              #                    ActionMode: REPLACE_ON_FAILURE
#              #                    StackName: !Sub ${NamePrefix}-AwsCoreDBAccessStack
#              #                    Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#              #                    TemplatePath: AccArtifact::Aws-AwsCoreDBAccessStack.yml
#              #                    ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#              #                    RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#              #                  InputArtifacts:
#              #                    - Name: AccArtifact
#              #                  RunOrder: 9
#              #                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              #                - Name: AwsCoreMirisProxyStack
#              #                  ActionTypeId:
#              #                    Category: Deploy
#              #                    Owner: AWS
#              #                    Version: "1"
#              #                    Provider: CloudFormation
#              #                  Configuration:
#              #                    ActionMode: REPLACE_ON_FAILURE
#              #                    StackName: !Sub ${NamePrefix}-AwsCoreMirisProxyStack
#              #                    Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#              #                    TemplatePath: AccArtifact::Aws-AwsCoreMirisProxyStack.yml
#              #                    ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#              #                    RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#              #                  InputArtifacts:
#              #                    - Name: AccArtifact
#              #                  RunOrder: 9
#              #                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              #                - Name: AwsCoreEmailSvctack
#              #                  ActionTypeId:
#              #                    Category: Deploy
#              #                    Owner: AWS
#              #                    Version: "1"
#              #                    Provider: CloudFormation
#              #                  Configuration:
#              #                    ActionMode: REPLACE_ON_FAILURE
#              #                    StackName: !Sub ${NamePrefix}-AwsCoreEmailSvctack
#              #                    Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#              #                    TemplatePath: AccArtifact::Aws-AwsCoreEmailSvctack.yml
#              #                    ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#              #                    RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#              #                  InputArtifacts:
#              #                    - Name: AccArtifact
#              #                  RunOrder: 9
#              #                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsCoreEmailSvctack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsCoreEmailSvctack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsCoreEmailSvctack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 10
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsAuthStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsAuthStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsAuthStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 11
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsApiV1Stack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsApiV1Stack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsApiV1Stack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 12
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsApiV2Stack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsApiV2Stack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsApiV2Stack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 13
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsEventsStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsEventsStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsEventsStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 14
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsFrontEndStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsFrontEndStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsFrontEndStack.yml
#                  #ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 15
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#              - Name: AwsApiDocsStack
#                ActionTypeId:
#                  Category: Deploy
#                  Owner: AWS
#                  Version: "1"
#                  Provider: CloudFormation
#                Configuration:
#                  ActionMode: REPLACE_ON_FAILURE
#                  StackName: !Sub ${NamePrefix}-AwsApiDocsStack
#                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
#                  TemplatePath: PrdArtifact::Aws-AwsApiDocsStack.yml
#                  ##ParameterOverrides: !Sub '{"NamePrefix": "${NamePrefix}"}'
#                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
#                InputArtifacts:
#                  - Name: PrdArtifact
#                RunOrder: 16
#                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
#          - !Ref AWS::NoValue

  PipelineEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub ${NamePrefix}-ecr-event-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}

  PipelineEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: default
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket:
            name:
              - !Ref ArtifactsBucket
          object:
            key:
              - "package.zip"
      Name: !Join ["-", [!Ref NamePrefix, !Ref Pipeline]]
      State: ENABLED
      Targets:
        - Arn:
            !Join [
              "",
              [
                "arn:aws:codepipeline:",
                !Ref "AWS::Region",
                ":",
                !Ref "AWS::AccountId",
                ":",
                !Ref Pipeline,
              ],
            ]
          RoleArn: !GetAtt PipelineEventRole.Arn
          Id: !Join ["-", ["codepipeline", !Ref Pipeline]]

  PipelineTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${NamePrefix}-pipeline-topic
      DisplayName: !Sub ${NamePrefix}-pipeline-topic
      Subscription:
        - Endpoint: groupictcicd@wipo.int
          Protocol: email

  #PipelineNotifications:
  #  Type: AWS::CodeStarNotifications::NotificationRule
  #  Properties:
  #    Name: !Sub ${NamePrefix}-notify-on-failures
  #    DetailType: FULL
  #    Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}
  #    EventTypeIds:
  #      - codepipeline-pipeline-pipeline-execution-failed
  #    Targets:
  #      - TargetType: SNS
  #        TargetAddress: !Ref PipelineTopic

Outputs:
  ArtifactsBucket:
    Description: "The name of the artifact bucket"
    Value: !Ref ArtifactsBucket

  ArtifactsBucketArn:
    Description: "The Arn of the artifact bucket"
    Value: !GetAtt ArtifactsBucket.Arn

  KMSKeyArn:
    Description: "The Arn of the KMS key"
    Value: !GetAtt KMSKey.Arn
