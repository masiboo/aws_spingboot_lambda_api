AWSTemplateFormatVersion: 2010-09-09

Description: >
  Creates the roles for cross account access

Parameters:
  NamePrefix:
    Description: Prefix added to the name of resources created in this stack
    Type: String
    Default: Aws

  DevelopmentAccount:
    Description: The id of the development account
    Type: String
    Default: "551493771163"

  AcceptanceAccount:
    Description: The id of the acceptance account
    Type: String
    Default: "489962969526"

  ProductionAccount:
    Description: The id of the production account
    Type: String
    Default: "278720074780"

  CicdAccount:
    Description: The id of the cicd account
    Type: String
    Default: "173148697964"

  # VpcCidr:
  #   Description: The CIDR Block of the VPC
  #   Type: String
  #   Default: "10.41.217.0/24"
  #   AllowedPattern: '^((\d{1,3})\.){3}\d{1,3}/\d{1,2}$'

  Environment:
    Description: Environment type (controls various parameters of the deployment, ip ranges, size of the EC2 instances, tags, etc.)
    Type: String
    AllowedValues: [dev, acc, prd]
    Default: acc

  DRRegion:
    Type: String
    Description: The Disaster Recovery region
    Default: eu-west-3

  # EnableDatabaseReplica:
  #   Description: Enable one read replica
  #   Type: String
  #   AllowedValues: [true, false]
  #   Default: true

  # BackupRetentionDays:
  #   Type: Number
  #   Description: The number of days for which the backups are retained
  #   Default: 35

  # DatabaseSnapshotId:
  #   Type: String
  #   Description: The parameter containing the cluster snapshot ID (set it to NONE to create a new empty DB)
  #   Default: NONE

  # DatabaseMasterUser:
  #   Description: The database master user name
  #   Type: String
  #   Default: Aws_master

  # DatabaseAccessUser:
  #   Description: The database access user name
  #   Type: String
  #   Default: Aws_access

  # DatabaseInstanceType:
  #   Description: The type of instance for the Aurora db
  #   Type: String
  #   AllowedValues:
  #     [
  #       db.t3.small,
  #       db.t3.medium,
  #       db.t3.large,
  #       db.r6g.large,
  #       db.r6g.xlarge,
  #       db.r6g.2xlarge,
  #     ]
  #   Default: db.t3.medium

  # DatabaseName:
  #   Description: The name of the database
  #   Type: String
  #   Default: Awsdb

  # DatabaseSchema:
  #   Description: The database schema to be passed in the JDBC URL
  #   Type: String
  #   Default: Awsschema

  # LogRetentionDays:
  #   Type: Number
  #   Description: Number of days of Log retention of CloudWatch
  #   Default: 7
  #   AllowedValues:
  #     [
  #       1,
  #       3,
  #       5,
  #       7,
  #       14,
  #       30,
  #       60,
  #       90,
  #       120,
  #       150,
  #       180,
  #       365,
  #       400,
  #       545,
  #       731,
  #       1827,
  #       3653,
  #     ]

  # IngressCidrs:
  #   Description: The comma delimited list of CIDRs which can access the application
  #   Type: String
  #   Default: "193.5.93.0/24"

#  OidcClientId:
#    Description: The OIDC Client Id for the application
#    Type: String
#
#  OidcClientSecret:
#    Description: The OIDC client ID password
#    Type: String

Conditions:
  IsCicdAccount: !Equals [!Ref AWS::AccountId, "173148697964"]
  IsMainRegion: !Not [!Equals [!Ref DRRegion, !Ref AWS::Region]]

Mappings:
  EnvironmentMap:
    dev:
      VpcCidr: 10.41.147.0/24
      IngressCidrs: 193.5.93.0/24
      LogRetentionDays: 7
      DatabaseSchema: Awsschema
      DatabaseName: Awsdb
      DatabaseInstanceType: db.t3.medium
      DatabaseAccessUser: Aws_access
      DatabaseMasterUser: Aws_master
      DatabaseSnapshotId: NONE
      BackupRetentionDays: 35
      EnableDatabaseReplica: true
    acc:
      VpcCidr: 10.43.241.0/24
      IngressCidrs: 193.5.93.0/24
      LogRetentionDays: 14
      DatabaseSchema: Awsschema
      DatabaseName: Awsdb
      DatabaseInstanceType: db.t3.large
      DatabaseAccessUser: Aws_access
      DatabaseMasterUser: Aws_master
      DatabaseSnapshotId: NONE
      BackupRetentionDays: 35
      EnableDatabaseReplica: true
    prd:
      VpcCidr: 10.44.153.0/24
      IngressCidrs: 193.5.93.0/24
      LogRetentionDays: 60
      DatabaseSchema: Awsschema
      DatabaseName: Awsdb
      DatabaseInstanceType: db.t3.large
      DatabaseAccessUser: Aws_access
      DatabaseMasterUser: Aws_master
      DatabaseSnapshotId: NONE
      BackupRetentionDays: 35
      EnableDatabaseReplica: true

Resources:
  CicdRole:
    Type: AWS::IAM::Role
    Condition: IsMainRegion
    Properties:
      RoleName: !Sub ${NamePrefix}-cicd-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${CicdAccount}:root
                - !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - sts:AssumeRole
      Path: /

  CicdPolicy:
    Type: AWS::IAM::Policy
    Condition: IsMainRegion
    Properties:
      PolicyName: !Sub ${NamePrefix}-cicd-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:*
              - s3:*
              - iam:PassRole
            Resource: "*"
      Roles:
        - !Ref CicdRole

  KmsCicdPolicy:
    Type: AWS::IAM::Policy
    Condition: IsMainRegion
    Properties:
      PolicyName: !Sub ${NamePrefix}-kms-cicd-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !Sub arn:aws:kms:${AWS::Region}:${CicdAccount}:key/*
      Roles:
        - !Ref CicdRole
        - !Ref DeploymentRole

  DeploymentRole:
    Type: AWS::IAM::Role
    Condition: IsMainRegion
    Properties:
      RoleName: !Sub ${NamePrefix}-deployment-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  DeploymentPolicy2:
    Type: AWS::IAM::ManagedPolicy
    Condition: IsMainRegion
    Properties:
      ManagedPolicyName: !Sub ${NamePrefix}-deployment-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iam:*
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/${NamePrefix}*
              - !Sub arn:aws:iam::${AWS::AccountId}:policy/${NamePrefix}*
              - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/${NamePrefix}*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/*
          - Effect: Allow
            Action:
              - ec2:*
              - elasticloadbalancing:*
              - elasticfilesystem:*
              - autoscaling:*
              - application-autoscaling:*
              - cloudwatch:*
              - events:*
              - s3:*
              - sns:*
              - cloudformation:*
              - cloudfront:*
              - elasticache:*
              - rds:*
              - sqs:*
              - ecs:*
              - lambda:*
              - apigateway:*
              - ssm:*
              - route53:*
              - servicediscovery:*
              - logs:*
              - kms:*
              - secretsmanager:*
              - backup:*
              - backup-storage:*
              - synthetics:*
              - acm:*
              - cognito-idp:*
              - es:*
              - waf:*
              - waf-regional:*
              - dynamodb:*
              - pipes:*
              - cloudtrail:*
              - dms:*
              - iam:*
            Resource: "*"
      Roles:
        - !Ref DeploymentRole

  VpcCidrBlock:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/vpc/cidr
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, VpcCidr]
      Description: The CIDR Block of the VPC
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  MasterUserCredentials:
    Type: AWS::SecretsManager::Secret
    Condition: IsMainRegion
    Properties:
      Description: The database credentials
      Name: !Sub /${NamePrefix}/rds/credentials/master
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "Aws_master"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludePunctuation: true
      ReplicaRegions:
        - Region: "eu-west-3"
      Tags:
        - Key: service
          Value: !Ref NamePrefix

  AccessUserCredentials:
    Type: AWS::SecretsManager::Secret
    Condition: IsMainRegion
    Properties:
      Description: The database credentials
      Name: !Sub /${NamePrefix}/rds/credentials/access
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "Aws_access"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludePunctuation: true
      ReplicaRegions:
        - Region: "eu-west-3"
      Tags:
        - Key: service
          Value: !Ref NamePrefix

  EnableDbReplica:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/rds/enable-replica
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, EnableDatabaseReplica]
      Description: Enable the creation of a database read replica
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  DbBackupRetentionDays:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/rds/backup-retention-days
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, BackupRetentionDays]
      Description: The number of days for which the backups are retained
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  DbSnapshotId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/rds/snapshot-id
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, DatabaseSnapshotId]
      Description: The id of the database snapshot
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  DbInstanceType:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/rds/instance-type
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, DatabaseInstanceType]
      Description: The instance type of the database
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  DbName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/rds/name
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, DatabaseName]
      Description: The name of the database
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  DbSchema:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/rds/schema
      Type: String
      Value:  !FindInMap [EnvironmentMap, !Ref Environment, DatabaseSchema]
      Description: The name of the database schema
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  # DBPrefixList:
  #   Type: AWS::EC2::PrefixList
  #   Properties:
  #     PrefixListName: sixter-business
  #     AddressFamily: IPv4
  #     MaxEntries: 10
  #     Entries:
  #       - Cidr: 10.140.101.25/32
  #         Description: rmc dev
  #     Tags:
  #       - Key: Name
  #         Value: sixter-business

  # PrefixListAccessDB:
  #   Type: AWS::SSM::Parameter
  #   Properties:
  #     Name: !Sub /${NamePrefix}/prefix-list/db
  #     Type: String
  #     Value: !GetAtt DBPrefixList.PrefixListId
  #     Description: The DB managed prefix list
  #     Tags:
  #       Environment: !Ref Environment
  #       Service: !Ref NamePrefix

  LogRetentionDaysNum:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/logs/retention-days
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, LogRetentionDays]
      Description: The number of days to retain the logs
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  IngressCidrBlocks:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/vpc/ingress-cidrs
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, IngressCidrs]
      Description: The CIDR Block from which the system is accessible
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  DatabaseMasterUserParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/rds/databaseMasterUser
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, DatabaseMasterUser]
      Description: Th master username
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

  DatabaseAccessUserParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/rds/databaseAccessUser
      Type: String
      Value: !FindInMap [EnvironmentMap, !Ref Environment, DatabaseAccessUser]
      Description: Th DB Acces username
      Tags:
        Environment: !Ref Environment
        Service: !Ref NamePrefix

