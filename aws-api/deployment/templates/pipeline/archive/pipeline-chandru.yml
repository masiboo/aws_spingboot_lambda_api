AWSTemplateFormatVersion: 2010-09-09

Description: >
  Creates the deployment pipeline

Parameters:
  NamePrefix:
    Description: Prefix added to the name of resources created in this stack. It correspond to the service tag
    Type: String
    Default: wipo-webportal

  EnableDeploymentToDev:
    Description: Enables the deployment of the app stack to the development account. When disabled it removes the existing stack
    Type: String
    AllowedValues: [true, false]
    Default: true

  EnableDeploymentToAcc:
    Description: Enables the deployment of the app stack to the acceptance account. When disabled it removes the existing stack
    Type: String
    AllowedValues: [true, false]
    Default: false

  DevelopmentAccount:
    Description: The id of the development account
    Type: String
    AllowedPattern: '^\d{12}$'
    Default: "191762909124"

  AcceptanceAccount:
    Description: The id of the acceptance account
    Type: String
    AllowedPattern: '^\d{12}$'
    Default: "749344702792"

  ProductionAccount:
    Description: The id of the production account
    Type: String
    AllowedPattern: '^\d{12}$'
    Default: "840125067811"

  CicdRole:
    Description: Role to assume to push the artifacts
    Type: String
    Default: cicd-webcms

  BudgetUnitCode:
    Description: The value for the budget-unit-code tag
    Type: String
    Default: "16097"

  BusinessImpactLevel:
    Description: The value for the business-impact-level tag
    Type: String
    AllowedValues: ["1", "2", "3", "4"]
    Default: "3"

  BusinessOwner:
    Description: The value for the business-owner tag
    Type: String
    Default: yavor.trapkov@wipo.int

  BusinessUnitName:
    Description: The value for the business-unit-name tag
    Type: String
    Default: "ICTD"

  DataClassification:
    Description: The value for the data-classification tag
    Type: String
    AllowedValues:
      ["public", "for_official_use_only", "confidential", "highly_confidential"]
    Default: "for_official_use_only"

  TechnicalOwner:
    Description: The value for the technical-owner tag
    Type: String
    Default: chandru.balasubramaniam@wipo.int

  CicdAccount:
    Description: The id of the cicd account
    Type: String
    Default: "173148697964"

Conditions:
  EnableDeploymentToDev: !Equals [!Ref EnableDeploymentToDev, true]
  EnableDeploymentToAcc: !Equals [!Ref EnableDeploymentToAcc, true]
  IsCicdAccount: !Equals [!Ref AWS::AccountId, "173148697964"]

Resources:
  KMSKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: Used by Assumed Roles in dev/acc/prd accounts to Encrypt/Decrypt artifacts
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          - Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: "*"
          - Sid: Allow use of the key to other accounts
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
                - !Sub arn:aws:iam::${CicdAccount}:root
                - !Sub arn:aws:iam::${CicdAccount}:role/${CicdRole}
                - !GetAtt BuildRole.Arn
                - !GetAtt PipelineRole.Arn
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
          - Sid: Allow use of the key to other accounts
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${DevelopmentAccount}:root
                - !Sub arn:aws:iam::${AcceptanceAccount}:root
                - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
                - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
                - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
                - !Sub arn:aws:iam::${ProductionAccount}:root
                - !Sub arn:aws:iam::${CicdAccount}:role/${CicdRole}
                - !GetAtt BuildRole.Arn
                - !GetAtt BuildRole.Arn
            Action:
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Decrypt
              - kms:DescribeKey
            Resource: "*"

  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${NamePrefix}-crossaccount-cmk
      TargetKeyId: !Ref KMSKey

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      BucketName: !Sub ${NamePrefix}-artifacts-${AWS::Region}-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Sub arn:aws:kms:eu-central-1:${AWS::AccountId}:alias/${NamePrefix}-crossaccount-cmk
            BucketKeyEnabled: true
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      VersioningConfiguration:
        Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      LifecycleConfiguration:
        Rules:
          - Id: NonCurrentAndIncompleteVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 90
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 3
          - Id: ExpireDevBuilds
            Status: Enabled
            Prefix: /
            ExpirationInDays: 90

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Id: !Sub ${NamePrefix}-artifacts-bucket-policy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${DevelopmentAccount}:root
                - !Sub arn:aws:iam::${AcceptanceAccount}:root
                - !Sub arn:aws:iam::${ProductionAccount}:root
                - !Sub arn:aws:iam::${CicdAccount}:root
                - !Sub arn:aws:iam::${CicdAccount}:role/${CicdRole}
                - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
                - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
                - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
                - !GetAtt BuildRole.Arn
                - !GetAtt PipelineRole.Arn
            Action:
              - s3:List*
              - s3:GetObject
              - s3:PutObject*
              - s3:*
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*

  ArtifactsBucketPutPackageAndReadOnlyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-artifacts-bucket-readwrite-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject*
              - s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}/*
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}/package.zip
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}/package.zip
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*package.zip
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}/*package.zip
      Roles:
        - !Ref PipelineRole
        - !If
          - IsCicdAccount
          - !Ref CicdRole
          - !Ref AWS::NoValue

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${NamePrefix}-build-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Ref CrossAccountAssumePolicy

  CrossAccountAssumePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role

  ReleaseLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${NamePrefix}-release-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CmkPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-cmk-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey
              - kms:DescribeKey
            Resource: !Sub arn:aws:kms:eu-central-1:${AWS::AccountId}:alias/${NamePrefix}-crossaccount-cmk
          - !If
            - IsCicdAccount
            - Effect: Allow
              Action:
                - kms:Encrypt
                - kms:Decrypt
                - kms:ReEncrypt*
                - kms:GenerateDataKey
                - kms:DescribeKey
              Resource: !Sub arn:aws:kms:eu-central-1:${DevelopmentAccount}:alias/${NamePrefix}-crossaccount-cmk
            - !Ref AWS::NoValue
          - !If
            - IsCicdAccount
            - Effect: Allow
              Action:
                - kms:Encrypt
                - kms:Decrypt
                - kms:ReEncrypt*
                - kms:GenerateDataKey
                - kms:DescribeKey
              Resource: !Sub arn:aws:kms:eu-central-1:191762909124:key/227c2d88-f17a-48b0-a616-c38cfdf319d3
            - !Ref AWS::NoValue
      Roles:
        - !Ref BuildRole
        - !Ref ReleaseLambdaRole
        - !If
          - IsCicdAccount
          - !Ref CicdRole
          - !Ref AWS::NoValue

  ArtifactsBucketReadWritePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-artifacts-bucket-readwrite-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject*
              - s3:GetObject*
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:AbortMultipartUpload
              - s3:PutObjectVersionAcl
              - s3:DeleteObject
              - s3:PutObjectAcl
              - s3:ListMultipartUploadPart
              - s3:CreateMultipartUpload
              - s3:*
            Resource:
              - !Sub arn:aws:s3:::${ArtifactsBucket}
              - !Sub arn:aws:s3:::${ArtifactsBucket}/*
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}
              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}/*
      Roles:
        - !Ref BuildRole
        - !Ref ReleaseLambdaRole
        - !Ref PipelineRole
        - !If
          - IsCicdAccount
          - !Ref CicdRole
          - !Ref AWS::NoValue

  BuildProjectLogsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-build-logs-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
      Roles:
        - !Ref BuildRole

  BuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildProjectLogsPolicy
    Properties:
      Name: !Ref NamePrefix
      Description: !Ref NamePrefix
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        EnvironmentVariables:
          - Name: PREFIX
            Value: !Ref NamePrefix
          - Name: ARTIFACTS_ACCOUNT
            Value: !Ref AWS::AccountId
          - Name: BUDGET_UNIT_CODE
            Value: !Ref BudgetUnitCode
          - Name: BUSINESS_IMPACT_LEVEL
            Value: !Ref BusinessImpactLevel
          - Name: BUSINESS_OWNER
            Value: !Ref BusinessOwner
          - Name: BUSINESS_UNIT_NAME
            Value: !Ref BusinessUnitName
          - Name: DATA_CLASSIFICATION
            Value: !Ref DataClassification
          - Name: TECHNICAL_OWNER
            Value: !Ref TechnicalOwner
        PrivilegedMode: false
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo Retrieving information from artifacts...
                - DATE=$(date '+%y-%m-%d')
                - echo $DATE
                - ls -al $CODEBUILD_SRC_DIR
                - COMMIT=$(jq -r '.codeRepository.commit' cicd-package.json)
                - SHORT_SOURCE_VERSION=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
                - BUILD_ID=$DATE.$COMMIT.$SHORT_SOURCE_VERSION
            build:
              commands:
                - echo Building the parameters file...
                - ARTIFACTS_BUCKET=${PREFIX}-artifacts-${AWS_REGION}-${ARTIFACTS_ACCOUNT}
                # AWS CloudFormation Artifacts (Template Configuration File)
                # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-cfn-artifacts.html
                - printf '{"Parameters":{' > templates/iac/master-parameters.json
                - printf '"BuildId":"%s"},' $BUILD_ID >> templates/iac/master-parameters.json
                - printf '"Tags":{' >> templates/iac/master-parameters.json
                - printf '"budget-unit-code":"%s",' "${BUDGET_UNIT_CODE}" >> templates/iac/master-parameters.json
                - printf '"business-impact-level":"%s",' "${BUSINESS_IMPACT_LEVEL}" >> templates/iac/master-parameters.json
                - printf '"business-owner":"%s",' "${BUSINESS_OWNER}" >> templates/iac/master-parameters.json
                - printf '"business-unit-name":"%s",' "${BUSINESS_UNIT_NAME}" >> templates/iac/master-parameters.json
                - printf '"data-classification":"%s",' "${DATA_CLASSIFICATION}" >> templates/iac/master-parameters.json
                - printf '"service":"%s",' "${PREFIX}" >> templates/iac/master-parameters.json
                - printf '"technical-owner":"%s"}}' "${TECHNICAL_OWNER}" >> templates/iac/master-parameters.json
                - cat templates/iac/master-parameters.json
                # - aws s3 cp --recursive code s3://$ARTIFACTS_BUCKET/
            post_build:
              commands:
                - echo Copying application code and CloudFormation templates to S3
                - zip templates/iac/master.zip templates/iac/master.yml templates/iac/master-parameters.json
                - aws s3 cp --recursive artifacts s3://$ARTIFACTS_BUCKET/builds/$BUILD_ID/artifacts/
                - aws s3 cp --recursive templates s3://$ARTIFACTS_BUCKET/builds/$BUILD_ID/templates/
          artifacts:
            secondary-artifacts:
              BuildArtifact:
                files:
                  - templates/iac/master.yml
                  - templates/iac/master-parameters.json
                  - templates/iac/master.*.yml
              WebAppDevArtifact:
                files:
                  - '**/*'
                base-directory: artifacts/code
              WebAppAccArtifact:
                files:
                  - '**/*'
                base-directory: artifacts/code
      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref BuildLogGroup
          Status: ENABLED

  BuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${NamePrefix}/build
      RetentionInDays: 7

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${NamePrefix}-pipeline-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  PipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-codepipeline-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: iam:PassRole
            Resource: "*"
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
          - Effect: Allow
            Action:
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              - lambda:*
            Resource: "*"
          - Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
            Resource: "*"
          - Effect: Allow
            Action:
              - ecr:DescribeImages
            Resource: "*"
      Roles:
        - !Ref PipelineRole

  AssumeRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${NamePrefix}-assume-role-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role

      Roles:
        - !Ref PipelineRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: AssumeRolePolicy
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      Name: !Ref NamePrefix
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
        EncryptionKey:
          Id: !GetAtt KMSKey.Arn
          Type: KMS
      Stages:
        - Name: Source
          Actions:
            - Name: S3Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: S3
              Configuration:
                S3Bucket: !Ref ArtifactsBucket
                S3ObjectKey: package.zip
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildProject
                PrimarySource: SourceArtifact
              RunOrder: 1
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
                - Name: WebAppDevArtifact
                - Name: WebAppAccArtifact
        - !If
          - EnableDeploymentToDev
          - Name: DeployToDevelopment
            Actions:
              - Name: DeployInfra
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode:
                    !If [EnableDeploymentToDev, REPLACE_ON_FAILURE, DELETE_ONLY]
                  StackName: !Sub ${NamePrefix}-app
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: BuildArtifact::templates/iac/master.yml
                  ParameterOverrides: !Sub '{"Environment": "dev", "NamePrefix": "${NamePrefix}", "ArtifactsAccount": "${AWS::AccountId}"}'
                  TemplateConfiguration: BuildArtifact::templates/iac/master-parameters.json
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: BuildArtifact
                RunOrder: 1
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
              - Name: DeployCloudfront
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode:
                    !If [EnableDeploymentToDev, REPLACE_ON_FAILURE, DELETE_ONLY]
                  StackName: !Sub ${NamePrefix}-cloudfront
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: BuildArtifact::templates/iac/master.cf.yml
                  ParameterOverrides: !Sub '{"Environment": "dev", "NamePrefix": "${NamePrefix}", "ArtifactsAccount": "${AWS::AccountId}"}'
                  TemplateConfiguration: BuildArtifact::templates/iac/master-parameters.json
                  RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: BuildArtifact
                RunOrder: 2
                RoleArn: !Sub arn:aws:iam::${DevelopmentAccount}:role/${NamePrefix}-cicd-role
          - !Ref AWS::NoValue
        - !If
          - EnableDeploymentToAcc
          - Name: DeployToAcceptance
            Actions:
              - Name: DeployInfra
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode:
                    !If [EnableDeploymentToAcc, REPLACE_ON_FAILURE, DELETE_ONLY]
                  StackName: !Sub ${NamePrefix}-app
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: BuildArtifact::templates/iac/master.yml
                  ParameterOverrides: !Sub '{"Environment": "acc", "NamePrefix": "${NamePrefix}", "ArtifactsAccount": "${AWS::AccountId}"}'
                  TemplateConfiguration: BuildArtifact::templates/iac/master-parameters.json
                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: BuildArtifact
                RunOrder: 1
                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
              - Name: DeployCloudfront
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode:
                    !If [EnableDeploymentToAcc, REPLACE_ON_FAILURE, DELETE_ONLY]
                  StackName: !Sub ${NamePrefix}-cloudfront
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: BuildArtifact::templates/iac/master.cf.yml
                  ParameterOverrides: !Sub '{"Environment": "acc", "NamePrefix": "${NamePrefix}", "ArtifactsAccount": "${AWS::AccountId}"}'
                  TemplateConfiguration: BuildArtifact::templates/iac/master-parameters.json
                  RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: BuildArtifact
                RunOrder: 2
                RoleArn: !Sub arn:aws:iam::${AcceptanceAccount}:role/${NamePrefix}-cicd-role
          - !Ref AWS::NoValue
        - !If
          - EnableDeploymentToAcc
          - Name: DeployToProduction
            Actions:
              - Name: DeployInfra
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode:
                    !If [EnableDeploymentToAcc, REPLACE_ON_FAILURE, DELETE_ONLY]
                  StackName: !Sub ${NamePrefix}-app
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: BuildArtifact::templates/iac/master.yml
                  ParameterOverrides: !Sub '{"Environment": "prd", "NamePrefix": "${NamePrefix}", "ArtifactsAccount": "${AWS::AccountId}"}'
                  TemplateConfiguration: BuildArtifact::templates/iac/master-parameters.json
                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: BuildArtifact
                RunOrder: 1
                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
              - Name: DeployCloudfront
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: "1"
                  Provider: CloudFormation
                Configuration:
                  ActionMode:
                    !If [EnableDeploymentToAcc, REPLACE_ON_FAILURE, DELETE_ONLY]
                  StackName: !Sub ${NamePrefix}-cloudfront
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  TemplatePath: BuildArtifact::templates/iac/master.cf.yml
                  ParameterOverrides: !Sub '{"Environment": "prd", "NamePrefix": "${NamePrefix}", "ArtifactsAccount": "${AWS::AccountId}"}'
                  TemplateConfiguration: BuildArtifact::templates/iac/master-parameters.json
                  RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-deployment-role
                InputArtifacts:
                  - Name: BuildArtifact
                RunOrder: 2
                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/${NamePrefix}-cicd-role
          - !Ref AWS::NoValue
  PipelineEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub ${NamePrefix}-ecr-event-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}

  PipelineEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: default
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket:
            name:
              - !Ref ArtifactsBucket
          object:
            key:
              - "package.zip"
      Name: !Join ["-", [!Ref NamePrefix, !Ref Pipeline]]
      State: ENABLED
      Targets:
        - Arn:
            !Join [
              "",
              [
                "arn:aws:codepipeline:",
                !Ref "AWS::Region",
                ":",
                !Ref "AWS::AccountId",
                ":",
                !Ref Pipeline,
              ],
            ]
          RoleArn: !GetAtt PipelineEventRole.Arn
          Id: !Join ["-", ["codepipeline", !Ref Pipeline]]

  PipelineTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${NamePrefix}-pipeline-topic
      DisplayName: !Sub ${NamePrefix}-pipeline-topic
      Subscription:
        - Endpoint: groupictcicd@wipo.int
          Protocol: email

  #PipelineNotifications:
  #  Type: AWS::CodeStarNotifications::NotificationRule
  #  Properties:
  #    Name: !Sub ${NamePrefix}-notify-on-failures
  #    DetailType: FULL
  #    Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}
  #    EventTypeIds:
  #      - codepipeline-pipeline-pipeline-execution-failed
  #    Targets:
  #      - TargetType: SNS
  #        TargetAddress: !Ref PipelineTopic

Outputs:
  ArtifactsBucket:
    Description: "The name of the artifact bucket"
    Value: !Ref ArtifactsBucket

  ArtifactsBucketArn:
    Description: "The Arn of the artifact bucket"
    Value: !GetAtt ArtifactsBucket.Arn

  KMSKeyArn:
    Description: "The Arn of the KMS key"
    Value: !GetAtt KMSKey.Arn
