AWSTemplateFormatVersion: 2010-09-09

Description: > 
  Creates the VPC, subnets, internet gateway and optionally nat gateways

Parameters:

  NamePrefix:
    Description: Prefix added to the name of resources created in this stack
    Type: String
    Default: Awscore
    
  VpcCidrBlock:
    Description: The CIDR Block for the VPC
    Type: AWS::SSM::Parameter::Value<String>

  CreateTransitGatewayAttachment:
    Description: Option to create the transit gateway attachment to the central egress VPC, when false local NAT gateways are created instead
    Default: true
    Type: String
    AllowedValues:
      - true
      - false

  TransitGatewayId: 
    Description: The ID of the central transit gateway
    Default: tgw-0d21059e2115ff7b8
    Type: String

    
Conditions: 

  CreateTransitGatewayResources: !Equals [ !Ref CreateTransitGatewayAttachment, true ]  

Resources:

  Vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-vpc

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt Vpc.CidrBlock, 15, 4 ]] #/28
      AvailabilityZone: !Select [ 0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-public-subnet1
          
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt Vpc.CidrBlock, 15, 4 ]] #/28
      AvailabilityZone: !Select [ 1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-public-subnet2 
          
  PublicSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt Vpc.CidrBlock, 15, 4 ]] #/28
      AvailabilityZone: !Select [ 2, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-public-subnet3                       
          
  AppSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt Vpc.CidrBlock, 15, 4 ]] #/28
      AvailabilityZone: !Select [ 0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-app-subnet1

  AppSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 4, !Cidr [ !GetAtt Vpc.CidrBlock, 15, 4 ]]
      AvailabilityZone: !Select [ 1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-app-subnet2

  AppSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 5, !Cidr [ !GetAtt Vpc.CidrBlock, 15, 4 ]]
      AvailabilityZone: !Select [ 2, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-app-subnet3
                  

  DataSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 6, !Cidr [ !GetAtt Vpc.CidrBlock, 15, 4 ]]
      AvailabilityZone: !Select [ 0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-data-subnet1

  DataSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 7, !Cidr [ !GetAtt Vpc.CidrBlock, 15, 4 ]]
      AvailabilityZone: !Select [ 1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-data-subnet2

  DataSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 8, !Cidr [ !GetAtt Vpc.CidrBlock, 15, 4 ]]
      AvailabilityZone: !Select [ 2, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-data-subnet3

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-internet-gateway
          
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc          

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-public-route-table  
          
  DataPrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-data-route-table  
          
  AppPrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${NamePrefix}-app-route-table                          

  RouteInternetGateway:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
      

  DataRouteTransitGateway:
    Type: 'AWS::EC2::Route'
    Condition: CreateTransitGatewayResources
    DependsOn:
      - TransitGatewayAttachment
    Properties:
      DestinationCidrBlock: '10.0.0.0/8'
      RouteTableId: !Ref DataPrivateRouteTable
      TransitGatewayId: !Ref TransitGatewayId  
      
  AppRouteTransitGateway:
    Type: 'AWS::EC2::Route'
    Condition: CreateTransitGatewayResources
    DependsOn:
      - TransitGatewayAttachment
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      RouteTableId: !Ref AppPrivateRouteTable
      TransitGatewayId: !Ref TransitGatewayId        
      
  DataPrivateSubnetAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref DataPrivateRouteTable
      SubnetId: !Ref DataSubnet1
      
  DataPrivateSubnetAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref DataPrivateRouteTable
      SubnetId: !Ref DataSubnet2   
      
  DataPrivateSubnetAssociation3:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref DataPrivateRouteTable
      SubnetId: !Ref DataSubnet3

  AppPrivateSubnetAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref AppPrivateRouteTable
      SubnetId: !Ref AppSubnet1

  AppPrivateSubnetAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref AppPrivateRouteTable
      SubnetId: !Ref AppSubnet2

  AppPrivateSubnetAssociation3:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref AppPrivateRouteTable
      SubnetId: !Ref AppSubnet3
      
  PublicSubnetAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1 

  PublicSubnetAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2   
      
  PublicSubnetAssociation3:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3                 
      
  TransitGatewayAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Condition: CreateTransitGatewayResources
    Properties: 
      SubnetIds: 
        - !Ref AppSubnet1
        - !Ref AppSubnet2
        - !Ref AppSubnet3
      TransitGatewayId: !Ref TransitGatewayId
      VpcId: !Ref Vpc
      Tags: 
        - Key: Name
          Value: !Sub ${NamePrefix}


  #SSM PARAMETERS

  VpcIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/vpcId
      Type: String
      Value: !Ref Vpc
      Description: The id of the Aws vpc


  VpcCidrBlockParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/VpcCidrBlock
      Type: String
      Value: !Ref VpcCidrBlock
      Description: The Cidr block of the Aws vpc

  PublicSubnetIdsParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/PublicSubnetIds
      Type: String
      Value: !Sub ${PublicSubnet1},${PublicSubnet2},${PublicSubnet3}
      Description: The public subnet Ids of the Aws vpc

  PrivateSubnetIdsParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/PrivateSubnetIds
      Type: String
      Value: !Sub ${AppSubnet1},${AppSubnet2},${AppSubnet3}
      Description: The private subnet Ids of the Aws vpc

  DataSubnetIdsParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/DataSubnetIds
      Type: String
      Value: !Sub ${DataSubnet1},${DataSubnet2},${DataSubnet3}
      Description: The data(private) subnet Ids of the Aws vpc

Outputs:

  VpcId:
    Description: "The VPC ID for Vpc"
    Value: !Ref Vpc
 
