#   ----------------------------------------------------------------------
#   Copyright (C) 2018 World Intellectual Property Organization (WIPO).
#   All Rights Reserved.
#
#   v1.0    Kumar Vipin    Initial Version
#   ----------------------------------------------------------------------
AWSTemplateFormatVersion: 2010-09-09

Description: > 
  Template to build the S3 buckets

Parameters:
  NamePrefix:
    Description: Prefix added to the name of resources created in this stack (must be the same as the one of the pipeline)
    Type: String
  
#  CloudfrontOAICanonicalUser:
#    Description: Cloudfront Origin Access Identity Canonical User
#    Type: String

  Environment:
    Description: Environment type (controls various parameters of the deployment, ip ranges, size of the EC2 instances, tags, etc.)
    Type: String
    AllowedValues: [dev, acc, prd]
    Default: acc

#  CicdAccount:
#    Type: String
#    Description: The ID of the CICD account that executes the pipeline

  CicdAccount:
    Description: The ID of the CICD account that executes the pipeline
    Type: String
    Default: "173148697964"

  LogRetentionDays:
    Type: Number
    Description: Number of days of Log retention of CloudWatch 

Resources:
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'OAI for Aws admin Web'

  ExportsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${NamePrefix}-export-${AWS::Region}-${AWS::AccountId}
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled

  ExportsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ExportsBucket
      PolicyDocument:
        Id: !Sub ${NamePrefix}-export-bucket-policy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource:
              - !Sub 'arn:aws:s3:::${ ExportsBucket}/*'
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${CicdAccount}:root
            Action:
              - s3:PutObject*
              - s3:ObjectOwnerOverrideToBucketOwner
            Resource:
              - !Sub 'arn:aws:s3:::${ExportsBucket}'
              - !Sub 'arn:aws:s3:::${ExportsBucket}/*'
#
  AwsFrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${NamePrefix}-website-${AWS::Region}-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: index.html
      Tags:
      - Key: Name
        Value: !Sub ${NamePrefix}-${AWS::Region}-${AWS::AccountId}
  
  AwsFrontendPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AwsFrontendBucket
      PolicyDocument:
        Id: CloudfrontAccessPolicy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action:
             - s3:GetObject*
             - s3:GetBucket*
             - s3:List*
            Resource:
              - !Sub 'arn:aws:s3:::${AwsFrontendBucket}'
              - !Sub 'arn:aws:s3:::${AwsFrontendBucket}/*'
          - Effect: Allow
            Principal:
              AWS: 
                - !Sub arn:aws:iam::${CicdAccount}:root
            Action: 
              - s3:PutObject*
              - s3:ListBucket*
              - s3:GetBucketLocation*
              - s3:ObjectOwnerOverrideToBucketOwner
            Resource: 
              - !Sub 'arn:aws:s3:::${AwsFrontendBucket}'
              - !Sub 'arn:aws:s3:::${AwsFrontendBucket}/*'

  LogsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub ${NamePrefix}-logs-${AWS::Region}-${AWS::AccountId}
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: StandardPolicy
            Status: Enabled
            ExpirationInDays: !Ref LogRetentionDays
  
  LogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LogsBucket
      PolicyDocument:
        Id: !Sub ${NamePrefix}-logs-bucket-policy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: 
              - s3:ListBucket
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
            Resource: 
              - !Sub arn:aws:s3:::${LogsBucket}
              - !Sub arn:aws:s3:::${LogsBucket}/*
          - Effect: Allow
            Principal:
              AWS: arn:aws:iam::054676820928:root
            Action: 
              - s3:PutObject
            Resource: 
              - !Sub arn:aws:s3:::${LogsBucket}/*
          - Effect: Allow
            Principal: 
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action: 
              - s3:GetBucketAcl
            Resource: 
              - !Sub arn:aws:s3:::${LogsBucket}
          - Effect: Allow
            Principal: 
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action: 
              - s3:PutObject
            Resource: 
              - !Sub arn:aws:s3:::${LogsBucket}/*
            Condition: 
              StringEquals: 
                's3:x-amz-acl': 'bucket-owner-full-control'  
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt LogsBucket.Arn
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub ${LogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  # The CloudTrail trail - uses the LoggingBucketName as the trail name
  ExportBucketTrail:
    Type: AWS::CloudTrail::Trail
    DependsOn: LogsBucketPolicy
    Properties:
      TrailName: !Sub ${NamePrefix}-logs-${AWS::Region}-${AWS::AccountId}
      S3BucketName: !Ref LogsBucket
      IsLogging: true
      IsMultiRegionTrail: false
      EventSelectors:
        - IncludeManagementEvents: false
          DataResources:
            - Type: AWS::S3::Object
              Values:
                - !Sub arn:aws:s3:::${ExportsBucket}/
      IncludeGlobalServiceEvents: false



  CloudfrontOAIParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/cloudfrontOAI
      Type: String
      Value: !Ref CloudFrontOriginAccessIdentity
      Description: The id CloudFrontOriginAccessIdentity

  AwsFrontendBucketNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/AwsFrontendBucketName
      Type: String
      Value: !Ref AwsFrontendBucket
      Description: The AwsFrontendBucket

  AwsFrontendWebsiteParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/AwsFrontendWebsite
      Type: String
      Value: !Sub '${AwsFrontendBucket}.s3-website.${AWS::Region}.amazonaws.com'
      Description: The AwsFrontendWebsite

  AwsFrontendDomainParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/AwsFrontendDomain
      Type: String
      Value: !Sub '${AwsFrontendBucket}.s3.amazonaws.com'
      Description: The AwsFrontendDomain

  LogsBucketArnParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/LogsBucketArn
      Type: String
      Value: !GetAtt LogsBucket.Arn
      Description: The LogsBucketArn

  LogsBucketParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${NamePrefix}/LogsBucket
      Type: String
      Value: !Ref LogsBucket
      Description: The LogsBucket

  # Bucket
#  ExportsBucket:
#    Type: AWS::S3::Bucket
#    Properties:
#      BucketName: !Sub ${NamePrefix}-export-${AWS::Region}-${AWS::AccountId}
#      AccessControl: Private
#      BucketEncryption:
#        ServerSideEncryptionConfiguration:
#          - ServerSideEncryptionByDefault:
#              SSEAlgorithm: AES256
#      VersioningConfiguration:
#        Status: Enabled
#
#  ExportsBucketPolicy:
#    Type: AWS::S3::BucketPolicy
#    Properties:
#      Bucket: !Ref ExportsBucket
#      PolicyDocument:
#        Id: !Sub ${NamePrefix}-export-bucket-policy
#        Version: 2012-10-17
#        Statement:
#          - Effect: Allow
#            Principal:
#              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
#            Action: 's3:GetObject'
#            Resource:
#              - !Sub 'arn:aws:s3:::${ ExportsBucket}/*'
#          - Effect: Allow
#            Principal:
#              AWS:
#                - !Sub arn:aws:iam::${CicdAccount}:root
#            Action:
#              - s3:PutObject*
#              - s3:ObjectOwnerOverrideToBucketOwner
#            Resource:
#              - !Sub 'arn:aws:s3:::${ExportsBucket}'
#              - !Sub 'arn:aws:s3:::${ExportsBucket}/*'

  # Artifacts Endbucket
  #  AwsArtifactBucket:
  #    Type: AWS::S3::Bucket
  #    Properties:
  #      BucketName: !Sub ${NamePrefix}-artifacts-${AWS::Region}-${AWS::AccountId}
  #      AccessControl: Private
  #      BucketEncryption:
  #        ServerSideEncryptionConfiguration:
  #          - ServerSideEncryptionByDefault:
  #              SSEAlgorithm: AES256
  #      VersioningConfiguration:
  #        Status: Enabled
  #      LifecycleConfiguration:
  #        Rules:
  #          - Id: NonCurrentAndIncompleteVersions
  #            Status: Enabled
  #            NoncurrentVersionExpirationInDays: 30
  #            AbortIncompleteMultipartUpload:
  #              DaysAfterInitiation: 3
  #          - Id: ExpirePipelineArtifacts
  #            Status: Enabled
  #            ExpirationInDays: 30
  #      Tags:
  #        - Key: Name
  #          Value: !Sub ${NamePrefix}-${AWS::Region}-${AWS::AccountId}

  #  AwsArtifactBucketPolicy:
  #    Type: AWS::S3::BucketPolicy
  #    Properties:
  #      Bucket: !Ref AwsArtifactBucket
  #      PolicyDocument:
  #        Id: !Sub ${NamePrefix}-artifact-bucket-policy
  #        Version: 2012-10-17
  #        Statement:
  #          - Effect: Allow
  #            Principal:
  #              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
  #            Action: 's3:GetObject'
  #            Resource:
  #              - !Sub 'arn:aws:s3:::${AwsArtifactBucket}/*'
  #          - Effect: Allow
  #            Principal:
  #              AWS:
  #                - !Sub arn:aws:iam::${CicdAccount}:root
  #            Action:
  #              - s3:PutObject*
  #              - s3:ObjectOwnerOverrideToBucketOwner
  #            Resource:
  #              - !Sub 'arn:aws:s3:::${AwsArtifactBucket}'
  #              - !Sub 'arn:aws:s3:::${AwsArtifactBucket}/*'


#  LogsBucket:
#    Type: AWS::S3::Bucket
#    DeletionPolicy: Retain
#    UpdateReplacePolicy: Retain
#    Properties:
#      BucketName: !Sub ${NamePrefix}-logs-${AWS::Region}-${AWS::AccountId}
#      AccessControl: Private
#      BucketEncryption:
#        ServerSideEncryptionConfiguration:
#          - ServerSideEncryptionByDefault:
#              SSEAlgorithm: AES256
#      LifecycleConfiguration:
#        Rules:
#          - Id: StandardPolicy
#            Status: Enabled
#            ExpirationInDays: !Ref LogRetentionDays
#
#  LogsBucketPolicy:
#    Type: AWS::S3::BucketPolicy
#    Properties:
#      Bucket: !Ref LogsBucket
#      PolicyDocument:
#        Id: !Sub ${NamePrefix}-logs-bucket-policy
#        Version: 2012-10-17
#        Statement:
#          - Effect: Allow
#            Principal:
#              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
#            Action:
#              - s3:ListBucket*
#              - s3:PutObject*
#              - s3:GetObject*
#              - s3:DeleteObject*
#            Resource:
#              - !Sub arn:aws:s3:::${LogsBucket}
#              - !Sub arn:aws:s3:::${LogsBucket}/*
#          - Effect: Allow
#            Principal:
#              AWS: arn:aws:iam::054676820928:root
#            Action:
#              - s3:PutObject
#            Resource:
#              - !Sub arn:aws:s3:::${LogsBucket}/*
#          - Effect: Allow
#            Principal:
#              Service: !Sub logs.${AWS::Region}.amazonaws.com
#            Action:
#              - s3:GetBucketAcl
#            Resource:
#              - !Sub arn:aws:s3:::${LogsBucket}
#          - Effect: Allow
#            Principal:
#              Service: !Sub logs.${AWS::Region}.amazonaws.com
#            Action:
#              - s3:PutObject
#            Resource:
#              - !Sub arn:aws:s3:::${LogsBucket}/*
#            Condition:
#              StringEquals:
#                's3:x-amz-acl': 'bucket-owner-full-control'
#          - Effect: Allow
#            Principal:
#              Service: cloudtrail.amazonaws.com
#            Action: s3:GetBucketAcl
#            Resource: !GetAtt LogsBucket.Arn
#          - Effect: Allow
#            Principal:
#              Service: cloudtrail.amazonaws.com
#            Action: s3:PutObject
#            Resource: !Sub ${LogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*
#            Condition:
#              StringEquals:
#                s3:x-amz-acl: bucket-owner-full-control

  # The CloudTrail trail - uses the LoggingBucketName as the trail name
#  ExportBucketTrail:
#    Type: AWS::CloudTrail::Trail
#    DependsOn: LogsBucketPolicy
#    Properties:
#      TrailName: !Sub ${NamePrefix}-logs-${AWS::Region}-${AWS::AccountId}
#      S3BucketName: !Ref LogsBucket
#      IsLogging: true
#      IsMultiRegionTrail: false
#      EventSelectors:
#        - IncludeManagementEvents: false
#          DataResources:
#            - Type: AWS::S3::Object
#              Values:
#                - !Sub arn:aws:s3:::${ExportsBucket}/
#      IncludeGlobalServiceEvents: false
#
  # Bamboo Roles + Policy
  #  PushImagesPolicy:
  #    Condition: IsCicdAccount
  #    Type: AWS::IAM::Policy
  #    Properties:
  #      PolicyName: !Sub ${NamePrefix}-push-images-policy
  #      PolicyDocument:
  #        Version: 2012-10-17
  #        Statement:
  #          - Effect: Allow
  #            Action:
  #              - ecr:GetAuthorizationToken
  #            Resource: "*"
  #          - Effect: Allow
  #            Action:
  #              - ecr:BatchCheckLayerAvailability
  #              - ecr:GetDownloadUrlForLayer
  #              - ecr:GetRepositoryPolicy
  #              - ecr:DescribeRepositories
  #              - ecr:ListImages
  #              - ecr:DescribeImages
  #              - ecr:BatchGetImage
  #              - ecr:InitiateLayerUpload
  #              - ecr:UploadLayerPart
  #              - ecr:CompleteLayerUpload
  #              - ecr:PutImage
  #            Resource:
  #              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${NamePrefix}/*"
  #              - !Sub "arn:aws:ecr:${AWS::Region}:${DevelopmentAccount}:repository/${NamePrefix}/*"
  #      Roles:
  #        - !Ref CicdRoleEx
  #
  #  PutPackagePolicy:
  #    Condition: IsCicdAccount
  #    Type: AWS::IAM::Policy
  #    Properties:
  #      PolicyName: !Sub ${NamePrefix}-put-package-policy
  #      PolicyDocument:
  #        Version: 2012-10-17
  #        Statement:
  #          - Effect: Allow
  #            Action:
  #              - s3:PutObject*
  #            Resource:
  #              - !Sub arn:aws:s3:::${AwsArtifactBucket}/package.zip
  #              - !Sub arn:aws:s3:::${NamePrefix}-artifacts-${AWS::Region}-${DevelopmentAccount}/package.zip
  #      Roles:
  #        - !Ref CicdRoleEx
  #
  #  CmkPolicy:
  #    Type: AWS::IAM::Policy
  #    Properties:
  #      PolicyName: !Sub ${NamePrefix}-cmk-policy
  #      PolicyDocument:
  #        Version: 2012-10-17
  #        Statement:
  #          - Effect: Allow
  #            Action:
  #              - kms:Encrypt
  #              - kms:Decrypt
  #              - kms:ReEncrypt*
  #              - kms:GenerateDataKey*
  #              - kms:DescribeKey
  #            Resource: !GetAtt KMSKey.Arn
  #      Roles:
  #        - !Ref CicdRoleEx
  #
  #  ArtifactsBucketReadWritePolicy:
  #    Type: AWS::IAM::Policy
  #    Properties:
  #      PolicyName: !Sub ${NamePrefix}-artifacts-bucket-readwrite-policy
  #      PolicyDocument:
  #        Version: 2012-10-17
  #        Statement:
  #          - Effect: Allow
  #            Action:
  #              - s3:PutObject*
  #              - s3:GetObject*
  #              - s3:ListBucket
  #            Resource:
  #              - !Sub arn:aws:s3:::${AwsArtifactBucket}
  #              - !Sub arn:aws:s3:::${AwsArtifactBucket}/*
  #      Roles:
  ##        - !Ref BuildRole
  ##        - !Ref PipelineRole
  #        - !If
  #          - IsCicdAccount
  #          - !Ref CicdRoleEx
  #          - !Ref AWS::NoValue
  #
  #SSM PARAMETERS

Outputs:
  CloudfrontOAI:
    Value: !Ref CloudFrontOriginAccessIdentity

#  CloudfrontOAICanonicalUser:
#    Value: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  AwsFrontendBucketName:
    Value: !Ref AwsFrontendBucket
  
  AwsFrontendWebsite:
    Value: !Sub '${AwsFrontendBucket}.s3-website.${AWS::Region}.amazonaws.com'

  AwsFrontendDomain:
    Value: !Sub '${AwsFrontendBucket}.s3.amazonaws.com'

  LogsBucket:
    Description: log bucket
    Value: !Ref LogsBucket

  LogsBucketArn:
    Value: !GetAtt LogsBucket.Arn

  ExportsBucket:
     Value: !Ref ExportsBucket

  ExportsBucketDomain:
    Value: !Sub '${ExportsBucket}.s3.amazonaws.com'

  ExportsBucketArn:
    Value: !GetAtt ExportsBucket.Arn
 

   #  AwsArtifactBucket:
#    Value: !Ref AwsArtifactBucket
#
#  AwsArtifactBucketDomain:
#    Value: !Sub '${AwsArtifactBucket}.s3.amazonaws.com'
#
#  AwsArtifactBucketArn:
#    Value: !GetAtt AwsArtifactBucket.Arn