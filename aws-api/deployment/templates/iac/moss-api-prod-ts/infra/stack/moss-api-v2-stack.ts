import * as base from '../../lib/template/stack/base/base-stack';
import {AppContext} from '../../lib/template/app-context';
import {AwsApiConstruct} from "../common-infra/AwsAPiConstruct";
import {Duration} from "aws-cdk-lib";
import {HttpMethod} from "aws-cdk-lib/aws-apigatewayv2";

export class AwsApiV2Stack extends base.BaseStack {

    constructor(appContext: AppContext, stackConfig: any) {
        super(appContext, stackConfig);

        new AwsApiConstruct(this, 'AwsApiConstruct-V2', {
            stackName: this.stackName,
            projectPrefix: this.projectPrefix,
            env: this.commonProps.env!,
            stackConfig: this.stackConfig,
            variables: this.commonProps.variables,

            lambdaFunctions: [

            ],

            lambdaV2Functions: [
                {
                    functionName:  'healthcheck-function',
                    functionId: 'HealthCheckFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'healthCheckIntegeration',
                    path: 'healthcheck',
                    methods: [HttpMethod.GET],
                    s3Policy: false,
                    springCloudRouterDefinition: 'getAwsHealth',
                    useFunction: true,
                    secured: true
                },
                {
                    functionName:  'versioncheck-function',
                    functionId: 'VersionCheckFunction',
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'versionCheckIntegeration',
                    path: 'version',
                    methods: [HttpMethod.GET],
                    s3Policy: false,
                    springCloudRouterDefinition: 'getAwsVersion',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'signed-url-function',
                    functionId: 'SignedUrlFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'SignedUrlFunctionIntegration',
                    path: 'artefacts/upload',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    springCloudRouterDefinition: 'createArtefact',
                    useFunction: true,
                    secured: false,
                    timeOut: Duration.seconds(300),
                },
                {
                    functionName: 'signed-url-batch-function',
                    functionId: 'SignedUrlBatchFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'SignedUrlBatchFunctionIntegration',
                    path: 'batches/upload/{scannedApp}',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    timeOut: Duration.seconds(300),
                },

                {
                    functionName:  'get-all-batch-function',
                    functionId: 'GetAllBatchFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetAllBatchFunctionIntegration',
                    path: 'batches',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    timeOut: Duration.seconds(300),
                },
                {
                    functionName: 'get-batch-detail-by-id-function',
                    functionId: 'GetBatchDetailbyIdFunction' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.BatchDetailRequestHandler',
                    integerationId: 'GetBatchDetailFunctionIntegration',
                    path: 'batch/{batchIdPathParam}',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    timeOut: Duration.seconds(300),
                },
                {
                    functionName: 'bulk-upload-request-function',
                    functionId: 'BulkUploadRequestFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'BulkUploadRequestFunctionIntegration',
                    path: 'batches/bulkupload',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    springCloudRouterDefinition: 'bulkUploadRequest',
                    timeOut: Duration.seconds(900),
                    useFunction: true,
                    secured: false,
                    invoker: true,
                },
                {
                    functionName: 'artefact-batch-upload-request-function',
                    functionId: 'ArtefactBatchUploadURLRequestHandlerFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'ArtefactBatchUploadURLRequestHandlerIntegration',
                    path: 'batches/upload',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    springCloudRouterDefinition: 'artefactBatchUploadURLRequestHandler',
                    timeOut: Duration.seconds(900),
                    useFunction: true,
                    secured: false
                },
                {
                    functionName:'cancel-Job-request-job-id',
                    functionId: 'CancelJobRequestId' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'CancelJobRequestFunctionIntegration',
                    path: 'job/cancelJob/{jobId}',
                    methods: [HttpMethod.PUT],
                    s3Policy: false,
                    springCloudRouterDefinition: 'cancelJobRequest',
                    timeOut: Duration.seconds(900),
                    useFunction: true,
                    secured: false
                },
                // {
                //     functionName:  'delete-artefact-by-batch-sequence',
                //     functionId: 'DeleteBatchByBatchSequenceFunctionV2' ,
                //     handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                //     integerationId: 'DeleteBatchByBatchSequenceIntegration',
                //     path: 'batches/delete/{batchSeq}',
                //     methods: [HttpMethod.PUT],
                //     s3Policy: false,
                //     springCloudRouterDefinition: 'deleteBatchByBatchSequence',
                //     timeOut: Duration.seconds(300),
                //     useFunction: true,
                //     secured: true
                // },
                {
                    functionName:  'lock-artefact-by-batch-seq',
                    functionId: 'LockArtefactByBatchSeqFunction' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactLockByBatchSeqHandler',
                    integerationId: 'LockArtefactByBatchSeqIntegration',
                    path: 'batches/lock/{batchSeq}',
                    methods: [HttpMethod.PUT],
                    s3Policy: false,
                    timeOut: Duration.seconds(300),
                },
                {
                    functionName:  'unlock-artefact-by-batch-seq',
                    functionId: 'UnlockArtefactByBatchSeqFunction' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactUnLockByBatchSeqHandler',
                    integerationId: 'UnlockArtefactByBatchSeqIntegration',
                    path: 'batches/unlock/{batchSeq}',
                    methods: [HttpMethod.PUT],
                    s3Policy: false,
                    timeOut: Duration.seconds(300),
                },
                {
                    functionName:'get-all-artefacts-function',
                    functionId: 'GetArtefactByDateStatusFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetArtefactByDateStatusIntegration',
                    path: 'artefacts',
                    methods: [HttpMethod.GET],
                    s3Policy: false,
                    springCloudRouterDefinition: 'getArtefactByDateStatus',
                    timeOut: Duration.seconds(900),
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'get-artefact-by-id',
                    functionId: 'GetbyIdFunction' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.ApiGatewayGetDocumentByDocIdRequestHandler',
                    integerationId: 'GetbyIdFunctionIntegration',
                    path: 'artefacts/{artefactId}',
                    methods: [HttpMethod.GET],
                    s3Policy: false,
                },
                {
                    functionName: 'get-indexed-file-report',
                    functionId: 'GetIndexedFileReportRequestHandlerFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetIndexedFileReportRequestHandlerIntegration',
                    path: 'report/get-indexed-file-report',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    springCloudRouterDefinition: 'getIndexedFileReport',
                    timeOut: Duration.seconds(900),
                    useFunction: true,
                    secured: false
                },
                {
                    functionName:  'index-artefact-by-id',
                    functionId: 'indexArtefactById' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'IndexArtefactByIdFunctionIntegration',
                    path: 'artefacts/index/{artefactId}',
                    methods: [HttpMethod.PUT],
                    s3Policy: false,
                    springCloudRouterDefinition: 'indexArtefact',
                    useFunction: true,
                    timeOut: Duration.seconds(900),
                },
                {
                    functionName: 'delete-artefact-by-id',
                    functionId: 'DeleteArtefactByIdFunction' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactDeleteByIdHandler',
                    integerationId: 'DeleteArtefactByIdIntegration',
                    path: 'artefacts/delete/{artefactId}',
                    methods: [HttpMethod.PUT],
                    s3Policy: false,
                },
                {
                    functionName: 'artefact-input-validate',
                    functionId: 'ValidateInputFunction' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactInputValidationRequestHandler',
                    integerationId: 'ValidateInputFunctionIntegration',
                    path: 'artefacts/validate',
                    methods: [HttpMethod.POST],
                    s3Policy: false,
                },
                {
                    functionName:  'get-all-jobs-by-status-and-date',
                    functionId: 'GetAllJobsFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetAllJobsFunctionFunctionIntegration',
                    path: 'jobs',
                    methods: [HttpMethod.GET],
                    s3Policy: false,
                    springCloudRouterDefinition: 'getAllJobs',
                    useFunction: true,
                    timeOut: Duration.seconds(900),
                },
                {
                    functionName:  'get-job-status-by-id',
                    functionId: 'GetJobStatusByIdFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetJobStatusByIdFunctionIntegration',
                    path: 'job/{jobId}/status',
                    methods: [HttpMethod.GET],
                    s3Policy: false,
                    springCloudRouterDefinition: 'getJobStatus',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName:  'get-all-job-status-by-requestId',
                    functionId: 'GetAllJobStatusByRequestIdFunction' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactJobStatusReportHandler',
                    integerationId: 'GetAllJobStatusByRequestIdFunctionIntegration',
                    path: 'job/status/{requestId}',
                    methods: [HttpMethod.GET],
                    s3Policy: false,
                },
                {
                    functionName: 'get-Artefact-ByArtefactId-function',
                    functionId: 'GetArtefactByArtefactIdFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetArtefactByArtefactIdIntegration',
                    path: 'artefacts/{artefactId}/url',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    useFunction: true,
                    secured: false,
                    springCloudRouterDefinition: 'getArtefactURL',
                    timeOut: Duration.seconds(900),
                },
                {
                    functionName:  'get-Artefact-info-function',
                    functionId: 'GetArtefactInfoByArtefactIdFunction' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactInfoHandler',
                    integerationId: 'GetArtefactInfoByArtefactIdIntegration',
                    path: 'artefacts/{artefactId}/info',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                },
                {
                    functionName:  'get-artefact-by-doc-id',
                    functionId: 'GetArtefactByDocIdFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetArtefactByDocIdIntegration',
                    path: 'artefacts/search',
                    methods: [HttpMethod.GET],
                    s3Policy: false,
                    springCloudRouterDefinition: 'getArtefactsByMirisDocId',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName:'validate-miris-doc-id',
                    functionId: 'ValidateMirisDocId' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.ValidateMirisDocIdHandler',
                    integerationId: 'ValidateMirisDocIdIntegration',
                    path: 'validate/documents/{mirisDocId}',
                    methods: [HttpMethod.GET],
                    s3Policy: false,
                },
                {
                    functionName: 'CreateArtefactNote',
                    functionId: 'CreateArtefactNoteFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'CreateArtefactNoteIntegration',
                    path: 'artefact-notes',
                    methods: [HttpMethod.POST],
                    s3Policy: false,
                },
                {
                    functionName:  'artefact-note-delete-by-id',
                    functionId: 'ArtefactNoteDeleteById' ,
                    handlerPath: 'org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactNoteDeleteByIdHandler',
                    integerationId: 'ArtefactNoteDeleteByIdHandler',
                    path: 'artefact-notes/{id}',
                    methods: [HttpMethod.DELETE],
                    s3Policy: false,
                },
                {
                    functionName: 'get-artefacts-by-filter-criteria',
                    functionId: 'GetArtefactsByFilterCriteriaFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetArtefactsByFilterCriteriaIntegration',
                    path: 'artefacts',
                    methods: [HttpMethod.POST],
                    s3Policy: false,
                    springCloudRouterDefinition: 'getArtefactsByFilterCriteria',
                    useFunction: true,
                    secured: false
                },
				{
                    functionName: 'get-artefact-notes-by-filter-criteria',
                    functionId: 'GetArtefactNotesByFilterCriteriaFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetArtefactNotesByFilterCriteriaIntegration',
                    path: 'artefact-notes',
                    methods: [HttpMethod.POST],
                    s3Policy: false,
                    springCloudRouterDefinition: 'getArtefactNotesByFilterCriteria',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'send-email',
                    functionId: 'sendEmailFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'SendEmail',
                    path: 'email',
                    methods: [HttpMethod.POST],
                    s3Policy: false,
                    springCloudRouterDefinition: 'sendEmail',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'image-converter-gif-to-jpg',
                    functionId: 'convertGifToJpgFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'ConvertGIFToJPG',
                    path: 'artefacts/convert/gif-to-jpg',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    springCloudRouterDefinition: 'convertGIFToJPG',
                    useFunction: true,
                    secured: true
                },
                {
                    functionName: 'convert-resize-image-to-tif',
                    functionId: 'convertResizeImageToTif' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'ConvertResizeImageToTif',
                    path: 'artefacts/convert/image-to-tif/{mirisDocId}',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    springCloudRouterDefinition: 'convertResizeImageToTif',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'list-all-s3-files',
                    functionId: 'listS3Files' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'listS3Files',
                    path: 'artefacts/s3/objects',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    springCloudRouterDefinition: 'listS3Files',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'batch-job-cancel-post',
                    functionId: 'batchJobCancelByRequestIdFunctionId' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'batchJobCancelByRequestIdIntegrationId',
                    path: 'job/batches/cancel/{requestId}',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    springCloudRouterDefinition: 'batchJobCancelByRequestId',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'batch-job-status-get',
                    functionId: 'batchJobStatusByRequestId' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'batchJobStatusByRequestIdIntegrationId',
                    path: 'job/batches/status/{requestId}',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    springCloudRouterDefinition: 'batchJobStatusByRequestId',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'cancel-bulk-job-request-post',
                    functionId: 'cancelBulkJobFunctionId' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'cancelBulkJobCancelIntegrationId',
                    path: 'job/bulk/cancel/{requestId}',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    springCloudRouterDefinition: 'bulkJobCancelByRequestId',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'bulk-job-status-get',
                    functionId: 'bulkJobStatusByRequestId' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'bulkJobStatusByRequestIdIntegrationId',
                    path: 'job/bulk/status/{requestId}',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    springCloudRouterDefinition: 'bulkJobStatusByRequestId',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'single-artefact-upload-request-post',
                    functionId: 'artefactUploadRequestFunctionId' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'artefactUploadRequestIntegrationId',
                    path: 'artefact/upload',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    springCloudRouterDefinition: 'artefactUploadRequest',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName:'get-all-artefacts-by-date-and-status',
                    functionId: 'GetAllArtefactsByDateStatusFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetAllArtefactsByDateStatusIntegration',
                    path: 'artefacts/byDateStatus',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    springCloudRouterDefinition: 'getAllArtefacts',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName:'get-all-artefacts-by-interval-and-status',
                    functionId: 'GetAllArtefactsByIntervalStatusFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetAllArtefactsByIntervalStatusIntegration',
                    path: 'artefacts/byIntervalStatus',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    springCloudRouterDefinition: 'getAllArtefacts',
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'check-existing-batch-sequence-function',
                    functionId: 'CheckExistingBatchSequenceFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'CheckExistingBatchSequenceIntegration',
                    path: 'batches/checkExistingBatchSequence',
                    methods: [HttpMethod.POST],
                    s3Policy: true,
                    springCloudRouterDefinition: 'checkExistingBatchSequence',
                    timeOut: Duration.seconds(900),
                    useFunction: true,
                    secured: false
                },
                {
                    functionName: 'get-batches-with-status-inserted',
                    functionId: 'GetAllBatchesFunction' ,
                    handlerPath: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest',
                    integerationId: 'GetAllBatchesIntegration',
                    path: 'getInsertedBatches',
                    methods: [HttpMethod.GET],
                    s3Policy: true,
                    springCloudRouterDefinition: 'getAllBatches',
                    timeOut: Duration.seconds(900),
                    useFunction: true,
                    secured: false
                }

            ]
        })

    }

}
