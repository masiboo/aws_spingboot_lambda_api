Resources:
  madridAwsbucket99295EA3:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: madrid-dev-registry-bucket-don-6567
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - POST
              - PUT
            AllowedOrigins:
              - "*"
            ExposedHeaders:
              - exposedHeaders
            Id: madrid-Aws-bucket-cors-rule
            MaxAge: 100
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/madrid-Aws-bucket/Resource
  madridAwsbucketPolicy482CCE82:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: madridAwsbucket99295EA3
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - madridAwsbucket99295EA3
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - madridAwsbucket99295EA3
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/madrid-Aws-bucket/Policy/Resource
  madridAwsbucketNotificationsDE13B530:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: madridAwsbucket99295EA3
      NotificationConfiguration:
        EventBridgeConfiguration: {}
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            LambdaFunctionArn:
              Fn::GetAtt:
                - s3TriggerFunction51735A69
                - Arn
      Managed: true
    DependsOn:
      - madridAwsbucketAllowBucketNotificationsToAwsApiDevTsStacks3TriggerFunction15A3A62A2CAFCD8D
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/madrid-Aws-bucket/Notifications/Resource
  madridAwsbucketAllowBucketNotificationsToAwsApiDevTsStacks3TriggerFunction15A3A62A2CAFCD8D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - s3TriggerFunction51735A69
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - madridAwsbucket99295EA3
          - Arn
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/madrid-Aws-bucket/AllowBucketNotificationsToAwsApiDevTsStacks3TriggerFunction15A3A62A
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |
          import boto3  # type: ignore
          import json
          import logging
          import urllib.request

          s3 = boto3.client("s3")

          EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

          CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

          def handler(event: dict, context):
            response_status = "SUCCESS"
            error_message = ""
            try:
              props = event["ResourceProperties"]
              bucket = props["BucketName"]
              notification_configuration = props["NotificationConfiguration"]
              request_type = event["RequestType"]
              managed = props.get('Managed', 'true').lower() == 'true'
              stack_id = event['StackId']

              if managed:
                config = handle_managed(request_type, notification_configuration)
              else:
                config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

              put_bucket_notification_configuration(bucket, config)
            except Exception as e:
              logging.exception("Failed to put bucket notification configuration")
              response_status = "FAILED"
              error_message = f"Error: {str(e)}. "
            finally:
              submit_response(event, context, response_status, error_message)

          def handle_managed(request_type, notification_configuration):
            if request_type == 'Delete':
              return {}
            return notification_configuration

          def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
            external_notifications = find_external_notifications(bucket, stack_id)

            if request_type == 'Delete':
              return external_notifications

            def with_id(notification):
              notification['Id'] = f"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}"
              return notification

            notifications = {}
            for t in CONFIGURATION_TYPES:
              external = external_notifications.get(t, [])
              incoming = [with_id(n) for n in notification_configuration.get(t, [])]
              notifications[t] = external + incoming

            if EVENTBRIDGE_CONFIGURATION in notification_configuration:
              notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
            elif EVENTBRIDGE_CONFIGURATION in external_notifications:
              notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

            return notifications

          def find_external_notifications(bucket, stack_id):
            existing_notifications = get_bucket_notification_configuration(bucket)
            external_notifications = {}
            for t in CONFIGURATION_TYPES:
              external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]

            if EVENTBRIDGE_CONFIGURATION in existing_notifications:
              external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

            return external_notifications

          def get_bucket_notification_configuration(bucket):
            return s3.get_bucket_notification_configuration(Bucket=bucket)

          def put_bucket_notification_configuration(bucket, notification_configuration):
            s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

          def submit_response(event: dict, context, response_status: str, error_message: str):
            response_body = json.dumps(
              {
                "Status": response_status,
                "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
                "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
                "StackId": event["StackId"],
                "RequestId": event["RequestId"],
                "LogicalResourceId": event["LogicalResourceId"],
                "NoEcho": False,
              }
            ).encode("utf-8")
            headers = {"content-type": "", "content-length": str(len(response_body))}
            try:
              req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
              with urllib.request.urlopen(req) as response:
                print(response.read().decode("utf-8"))
              print("Status code: " + response.reason)
            except Exception as e:
                print("send(..) failed executing request.urlopen(..): " + str(e))
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: python3.7
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  AwsRegistryTableDev360E734A:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: type
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: GSI-Artefact-1
          KeySchema:
            - AttributeName: type
              KeyType: HASH
            - AttributeName: status
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TableName: madrid-dev-Aws-table-don-6567
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/AwsRegistryTableDev/Resource
  HealthCheckFunctionServiceRoleA640C67E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/HealthCheckFunction/ServiceRole/Resource
  HealthCheckFunctionServiceRoleDefaultPolicy250D848A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AwsRegistryTableDev360E734A
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AwsRegistryTableDev360E734A
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: HealthCheckFunctionServiceRoleDefaultPolicy250D848A
      Roles:
        - Ref: HealthCheckFunctionServiceRoleA640C67E
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/HealthCheckFunction/ServiceRole/DefaultPolicy/Resource
  HealthCheckFunctionC4679183:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      Role:
        Fn::GetAtt:
          - HealthCheckFunctionServiceRoleA640C67E
          - Arn
      Environment:
        Variables:
          REGISTRY_TABLE_NAME:
            Ref: AwsRegistryTableDev360E734A
          ARTEFACTS_S3_BUCKET:
            Ref: madridAwsbucket99295EA3
          CACHE_TABLE:
            Ref: AwsRegistryTableDev360E734A
          APP_ENVIRONMENT: local
      FunctionName: madrid-dev-healthcheck-function-don-6567
      Handler: org.wipo.trademarks.aws.Aws.artefact.entrypoints.AwsHealthCheck
      MemorySize: 512
      Runtime: provided.al2
      TracingConfig:
        Mode: Active
    DependsOn:
      - HealthCheckFunctionServiceRoleDefaultPolicy250D848A
      - HealthCheckFunctionServiceRoleA640C67E
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/HealthCheckFunction/Resource
      aws:asset:path: asset.c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  HealthCheckFunctionLogRetention95340FCF:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: HealthCheckFunctionC4679183
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/HealthCheckFunction/LogRetention/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:DeleteRetentionPolicy
              - logs:PutRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SignedUrlFunctionServiceRoleC460582A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/SignedUrlFunction/ServiceRole/Resource
  SignedUrlFunctionServiceRoleDefaultPolicy28C0F137:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AwsRegistryTableDev360E734A
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AwsRegistryTableDev360E734A
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: SignedUrlFunctionServiceRoleDefaultPolicy28C0F137
      Roles:
        - Ref: SignedUrlFunctionServiceRoleC460582A
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/SignedUrlFunction/ServiceRole/DefaultPolicy/Resource
  SignedUrlFunctionA51A7FA6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      Role:
        Fn::GetAtt:
          - SignedUrlFunctionServiceRoleC460582A
          - Arn
      Environment:
        Variables:
          REGISTRY_TABLE_NAME:
            Ref: AwsRegistryTableDev360E734A
          ARTEFACTS_S3_BUCKET:
            Ref: madridAwsbucket99295EA3
          CACHE_TABLE:
            Ref: AwsRegistryTableDev360E734A
          APP_ENVIRONMENT: local
      FunctionName: madrid-dev-signed-url-function-don-6567
      Handler: org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactUploadURLRequestHandler
      MemorySize: 512
      Runtime: provided.al2
      TracingConfig:
        Mode: Active
    DependsOn:
      - SignedUrlFunctionServiceRoleDefaultPolicy28C0F137
      - SignedUrlFunctionServiceRoleC460582A
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/SignedUrlFunction/Resource
      aws:asset:path: asset.c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SignedUrlFunctionLogRetention24E1F7FF:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: SignedUrlFunctionA51A7FA6
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/SignedUrlFunction/LogRetention/Resource
  SignedUrlBatchFunctionServiceRole3B81C54F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/SignedUrlBatchFunction/ServiceRole/Resource
  SignedUrlBatchFunctionServiceRoleDefaultPolicyBBF435AD:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AwsRegistryTableDev360E734A
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AwsRegistryTableDev360E734A
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: SignedUrlBatchFunctionServiceRoleDefaultPolicyBBF435AD
      Roles:
        - Ref: SignedUrlBatchFunctionServiceRole3B81C54F
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/SignedUrlBatchFunction/ServiceRole/DefaultPolicy/Resource
  SignedUrlBatchFunctionFE03F4B3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      Role:
        Fn::GetAtt:
          - SignedUrlBatchFunctionServiceRole3B81C54F
          - Arn
      Environment:
        Variables:
          REGISTRY_TABLE_NAME:
            Ref: AwsRegistryTableDev360E734A
          ARTEFACTS_S3_BUCKET:
            Ref: madridAwsbucket99295EA3
          CACHE_TABLE:
            Ref: AwsRegistryTableDev360E734A
          APP_ENVIRONMENT: local
      FunctionName: madrid-dev-signed-url-batch-function-don-6567
      Handler: org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactBatchUploadURLRequestHandler
      MemorySize: 512
      Runtime: provided.al2
      TracingConfig:
        Mode: Active
    DependsOn:
      - SignedUrlBatchFunctionServiceRoleDefaultPolicyBBF435AD
      - SignedUrlBatchFunctionServiceRole3B81C54F
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/SignedUrlBatchFunction/Resource
      aws:asset:path: asset.c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SignedUrlBatchFunctionLogRetentionBC248130:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: SignedUrlBatchFunctionFE03F4B3
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/SignedUrlBatchFunction/LogRetention/Resource
  getAllArtefactsFunctionServiceRole83A4214A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/getAllArtefactsFunction/ServiceRole/Resource
  getAllArtefactsFunctionServiceRoleDefaultPolicy7BF09D9A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AwsRegistryTableDev360E734A
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AwsRegistryTableDev360E734A
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: getAllArtefactsFunctionServiceRoleDefaultPolicy7BF09D9A
      Roles:
        - Ref: getAllArtefactsFunctionServiceRole83A4214A
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/getAllArtefactsFunction/ServiceRole/DefaultPolicy/Resource
  getAllArtefactsFunction2E33814E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      Role:
        Fn::GetAtt:
          - getAllArtefactsFunctionServiceRole83A4214A
          - Arn
      Environment:
        Variables:
          REGISTRY_TABLE_NAME:
            Ref: AwsRegistryTableDev360E734A
          ARTEFACTS_S3_BUCKET:
            Ref: madridAwsbucket99295EA3
          CACHE_TABLE:
            Ref: AwsRegistryTableDev360E734A
          APP_ENVIRONMENT: local
      FunctionName: madrid-dev-get-all-artefacts-function-don-6567
      Handler: org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactRequestHandler
      MemorySize: 512
      Runtime: provided.al2
      TracingConfig:
        Mode: Active
    DependsOn:
      - getAllArtefactsFunctionServiceRoleDefaultPolicy7BF09D9A
      - getAllArtefactsFunctionServiceRole83A4214A
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/getAllArtefactsFunction/Resource
      aws:asset:path: asset.c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getAllArtefactsFunctionLogRetentionA32E07A5:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: getAllArtefactsFunction2E33814E
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/getAllArtefactsFunction/LogRetention/Resource
  GetbyIdFunctionServiceRoleF1A42155:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetbyIdFunction/ServiceRole/Resource
  GetbyIdFunctionServiceRoleDefaultPolicyEF528BB5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AwsRegistryTableDev360E734A
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AwsRegistryTableDev360E734A
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: GetbyIdFunctionServiceRoleDefaultPolicyEF528BB5
      Roles:
        - Ref: GetbyIdFunctionServiceRoleF1A42155
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetbyIdFunction/ServiceRole/DefaultPolicy/Resource
  GetbyIdFunction8BECF13A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      Role:
        Fn::GetAtt:
          - GetbyIdFunctionServiceRoleF1A42155
          - Arn
      Environment:
        Variables:
          REGISTRY_TABLE_NAME:
            Ref: AwsRegistryTableDev360E734A
          ARTEFACTS_S3_BUCKET:
            Ref: madridAwsbucket99295EA3
          CACHE_TABLE:
            Ref: AwsRegistryTableDev360E734A
          APP_ENVIRONMENT: local
      FunctionName: madrid-dev-get-artefact-by-id-don-6567
      Handler: org.wipo.trademarks.aws.Aws.artefact.entrypoints.ApiGatewayGetDocumentByDocIdRequestHandler
      MemorySize: 512
      Runtime: provided.al2
      TracingConfig:
        Mode: Active
    DependsOn:
      - GetbyIdFunctionServiceRoleDefaultPolicyEF528BB5
      - GetbyIdFunctionServiceRoleF1A42155
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetbyIdFunction/Resource
      aws:asset:path: asset.c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetbyIdFunctionLogRetention282FC6A4:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: GetbyIdFunction8BECF13A
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetbyIdFunction/LogRetention/Resource
  ValidateInputFunctionServiceRole5C514DB6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/ValidateInputFunction/ServiceRole/Resource
  ValidateInputFunctionServiceRoleDefaultPolicy1751E005:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ValidateInputFunctionServiceRoleDefaultPolicy1751E005
      Roles:
        - Ref: ValidateInputFunctionServiceRole5C514DB6
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/ValidateInputFunction/ServiceRole/DefaultPolicy/Resource
  ValidateInputFunctionDA308F9F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      Role:
        Fn::GetAtt:
          - ValidateInputFunctionServiceRole5C514DB6
          - Arn
      Environment:
        Variables:
          REGISTRY_TABLE_NAME:
            Ref: AwsRegistryTableDev360E734A
          ARTEFACTS_S3_BUCKET:
            Ref: madridAwsbucket99295EA3
          CACHE_TABLE:
            Ref: AwsRegistryTableDev360E734A
          APP_ENVIRONMENT: local
      FunctionName: madrid-dev-artefact-input-validate-don-6567
      Handler: org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactInputValidationRequestHandler
      MemorySize: 512
      Runtime: provided.al2
      TracingConfig:
        Mode: Active
    DependsOn:
      - ValidateInputFunctionServiceRoleDefaultPolicy1751E005
      - ValidateInputFunctionServiceRole5C514DB6
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/ValidateInputFunction/Resource
      aws:asset:path: asset.c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ValidateInputFunctionLogRetention3CCC6DEB:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: ValidateInputFunctionDA308F9F
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/ValidateInputFunction/LogRetention/Resource
  GetJobStatusByIdFunctionServiceRole6AE3CDC1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetJobStatusByIdFunction/ServiceRole/Resource
  GetJobStatusByIdFunctionServiceRoleDefaultPolicyC21AD5BC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AwsRegistryTableDev360E734A
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AwsRegistryTableDev360E734A
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: GetJobStatusByIdFunctionServiceRoleDefaultPolicyC21AD5BC
      Roles:
        - Ref: GetJobStatusByIdFunctionServiceRole6AE3CDC1
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetJobStatusByIdFunction/ServiceRole/DefaultPolicy/Resource
  GetJobStatusByIdFunctionFE56FB05:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      Role:
        Fn::GetAtt:
          - GetJobStatusByIdFunctionServiceRole6AE3CDC1
          - Arn
      Environment:
        Variables:
          REGISTRY_TABLE_NAME:
            Ref: AwsRegistryTableDev360E734A
          ARTEFACTS_S3_BUCKET:
            Ref: madridAwsbucket99295EA3
          CACHE_TABLE:
            Ref: AwsRegistryTableDev360E734A
          APP_ENVIRONMENT: local
      FunctionName: madrid-dev-get-job-status-by-id-don-6567
      Handler: org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactJobStatusCheck
      MemorySize: 512
      Runtime: provided.al2
      TracingConfig:
        Mode: Active
    DependsOn:
      - GetJobStatusByIdFunctionServiceRoleDefaultPolicyC21AD5BC
      - GetJobStatusByIdFunctionServiceRole6AE3CDC1
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetJobStatusByIdFunction/Resource
      aws:asset:path: asset.c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetJobStatusByIdFunctionLogRetentionC965186F:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: GetJobStatusByIdFunctionFE56FB05
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetJobStatusByIdFunction/LogRetention/Resource
  GetArtefactByArtefactIdFunctionServiceRole43DA5A36:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetArtefactByArtefactIdFunction/ServiceRole/Resource
  GetArtefactByArtefactIdFunctionServiceRoleDefaultPolicyE11DE198:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AwsRegistryTableDev360E734A
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AwsRegistryTableDev360E734A
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: GetArtefactByArtefactIdFunctionServiceRoleDefaultPolicyE11DE198
      Roles:
        - Ref: GetArtefactByArtefactIdFunctionServiceRole43DA5A36
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetArtefactByArtefactIdFunction/ServiceRole/DefaultPolicy/Resource
  GetArtefactByArtefactIdFunction5EC229D8:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      Role:
        Fn::GetAtt:
          - GetArtefactByArtefactIdFunctionServiceRole43DA5A36
          - Arn
      Environment:
        Variables:
          REGISTRY_TABLE_NAME:
            Ref: AwsRegistryTableDev360E734A
          ARTEFACTS_S3_BUCKET:
            Ref: madridAwsbucket99295EA3
          CACHE_TABLE:
            Ref: AwsRegistryTableDev360E734A
          APP_ENVIRONMENT: local
      FunctionName: madrid-dev-get-Artefact-ByArtefactId-function-don-6567
      Handler: org.wipo.trademarks.aws.Aws.artefact.entrypoints.ArtefactDownloadUrlByArtefactId
      MemorySize: 512
      Runtime: provided.al2
      TracingConfig:
        Mode: Active
    DependsOn:
      - GetArtefactByArtefactIdFunctionServiceRoleDefaultPolicyE11DE198
      - GetArtefactByArtefactIdFunctionServiceRole43DA5A36
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetArtefactByArtefactIdFunction/Resource
      aws:asset:path: asset.c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetArtefactByArtefactIdFunctionLogRetentionBF5647A5:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: GetArtefactByArtefactIdFunction5EC229D8
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/GetArtefactByArtefactIdFunction/LogRetention/Resource
  s3TriggerFunctionServiceRole29BAF290:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/s3TriggerFunction/ServiceRole/Resource
  s3TriggerFunctionServiceRoleDefaultPolicy1C8E473F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - AwsRegistryTableDev360E734A
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - AwsRegistryTableDev360E734A
                        - Arn
                    - /index/*
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - madridAwsbucket99295EA3
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - madridAwsbucket99295EA3
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: s3TriggerFunctionServiceRoleDefaultPolicy1C8E473F
      Roles:
        - Ref: s3TriggerFunctionServiceRole29BAF290
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/s3TriggerFunction/ServiceRole/DefaultPolicy/Resource
  s3TriggerFunction51735A69:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      Role:
        Fn::GetAtt:
          - s3TriggerFunctionServiceRole29BAF290
          - Arn
      Environment:
        Variables:
          REGISTRY_TABLE_NAME:
            Ref: AwsRegistryTableDev360E734A
          ARTEFACTS_S3_BUCKET:
            Ref: madridAwsbucket99295EA3
          CACHE_TABLE:
            Ref: AwsRegistryTableDev360E734A
          APP_ENVIRONMENT: local
      FunctionName: madrid-dev-s3-trigger-don-6567
      Handler: org.wipo.trademarks.aws.Aws.artefact.entrypoints.S3EventTriggerHandler
      MemorySize: 512
      Runtime: provided.al2
      TracingConfig:
        Mode: Active
    DependsOn:
      - s3TriggerFunctionServiceRoleDefaultPolicy1C8E473F
      - s3TriggerFunctionServiceRole29BAF290
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/s3TriggerFunction/Resource
      aws:asset:path: asset.c8867c2b1582527e6e46f72acc7cdc2ebeb50b44a4c69f0947836a33b978013b.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  s3TriggerFunctionLogRetention240DB4F1:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: s3TriggerFunction51735A69
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/s3TriggerFunction/LogRetention/Resource
  AwsAdminApi4AF1E436:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - Authorization
        AllowMethods:
          - GET
          - HEAD
          - OPTIONS
          - POST
        AllowOrigins:
          - "*"
        MaxAge: 864000
      Name: madrid-dev-Awsapi-don-6567
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/AwsAdminApi/Resource
  AwsAdminApiDefaultStage982C781E:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: AwsAdminApi4AF1E436
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/AwsAdminApi/DefaultStage/Resource
  AwsAdminApiGETapihealthcheckhealthCheckIntegeration475D8086:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: AwsAdminApi4AF1E436
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - HealthCheckFunctionC4679183
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/AwsAdminApi/GET--api--healthcheck/healthCheckIntegeration/Resource
  AwsAdminApiGETapihealthcheckhealthCheckIntegerationPermissionFC0D26C4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HealthCheckFunctionC4679183
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: AwsAdminApi4AF1E436
            - /*/*/api/healthcheck
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/AwsAdminApi/GET--api--healthcheck/healthCheckIntegeration-Permission
  AwsAdminApiGETapihealthcheckD26C10EE:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: AwsAdminApi4AF1E436
      RouteKey: GET /api/healthcheck
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: AwsAdminApiGETapihealthcheckhealthCheckIntegeration475D8086
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/AwsAdminApi/GET--api--healthcheck/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02Q3W7CMAyFn4X71KwF7gdI0yZNGup2j0zrlUCbVHUCQlHfffkpg6tzfOTEn12AWy3hZYZXzqr6nLXyAO7bYHUWPto7XoDb2OpMRmx/1eSS7HQrq9sjnupUbJBpFC12hxrB+Z4dDZ1kllqJN6sqE4yP734UEjtwpW4pxFEfA5IbRX1T2OnaI/7gIXVGMwpe7JGZDMM6iGh1w/Cpm5IMqTgMe9mgoSveLkUkWvcyfOCXbeJPH8pQM+CdrNTW0DhGS6ztUJH4N3FIeClVEzq+rOltPNFWq1qmjVYryDNs+yP6A79OF54HfWaZOty7MX1ACpqYgosU0T3heSqla4ITzy/5Eooc8tmJpcwG63ftCMqkf/DJih7dAQAA
    Metadata:
      aws:cdk:path: AwsApiDevTsStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  ApiUrl:
    Value:
      Fn::GetAtt:
        - AwsAdminApi4AF1E436
        - ApiEndpoint
    Export:
      Name: madrid-dev-api-url-don-6567
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

